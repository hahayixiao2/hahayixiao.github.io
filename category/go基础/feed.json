{
    "version": "https://jsonfeed.org/version/1",
    "title": "一个小萌新的进阶之路 • All posts by \"go基础\" category",
    "description": "",
    "home_page_url": "https://hahayixiao2.github.io",
    "items": [
        {
            "id": "https://hahayixiao2.github.io/computer-science/GO/gobase/gostudy/go/",
            "url": "https://hahayixiao2.github.io/computer-science/GO/gobase/gostudy/go/",
            "title": "Go语言",
            "date_published": "2022-05-09T10:15:48.000Z",
            "content_html": "<h1 id=\"go语言简介\"><a class=\"markdownIt-Anchor\" href=\"#go语言简介\">#</a> go 语言简介</h1>\n<p>Go（又称 Golang）是 Google 的 Robert Griesemer，Rob Pike 及 Ken Thompson 开发的一种静态强类型、编译型语言。Go 语言语法与 C 相近，但功能上有：内存安全，GC（垃圾回收），结构形态及 CSP-style 并发计算。</p>\n<h2 id=\"go语言特点\"><a class=\"markdownIt-Anchor\" href=\"#go语言特点\">#</a> go 语言特点</h2>\n<ol>\n<li>背靠大厂，google 背书，可靠</li>\n<li>天生支持并发（最显著特点）</li>\n<li>语法简单，容易上手</li>\n<li>内置 runtime，支持垃圾回收</li>\n<li>可直接编译成机器码，不依赖其他库</li>\n<li>丰富的标准库</li>\n<li>跨平台编译</li>\n</ol>\n<h2 id=\"go语言的应用领域\"><a class=\"markdownIt-Anchor\" href=\"#go语言的应用领域\">#</a> go 语言的应用领域</h2>\n<ol>\n<li>服务器编程</li>\n<li>开发云平台</li>\n<li>区块链</li>\n<li>分布式系统</li>\n<li>网络编程</li>\n</ol>\n<h2 id=\"那些公司项目在使用go语言\"><a class=\"markdownIt-Anchor\" href=\"#那些公司项目在使用go语言\">#</a> 那些公司（项目）在使用 go 语言</h2>\n<h3 id=\"公司\"><a class=\"markdownIt-Anchor\" href=\"#公司\">#</a> 公司</h3>\n<ol>\n<li>\n<p><strong>Google</strong></p>\n<p>k8s</p>\n</li>\n<li>\n<p><strong>Facebook</strong></p>\n<p>facebookgo</p>\n</li>\n<li>\n<p><strong>腾讯</strong></p>\n<p>蓝鲸平台</p>\n<p>容器技术</p>\n</li>\n<li>\n<p><strong>百度</strong></p>\n<p>运维项目 BFE</p>\n</li>\n<li>\n<p><strong>京东</strong></p>\n<p>消息推送系统、云存储、京东商城</p>\n</li>\n<li>\n<p><strong>小米</strong></p>\n<p>运维监控系统、小米互娱、小米商城、小米视频、小米生态链</p>\n</li>\n<li>\n<p><strong>360</strong></p>\n<p>日志搜索系统 Poseidon</p>\n</li>\n</ol>\n<h1 id=\"go语言开发环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#go语言开发环境搭建\">#</a> go 语言开发环境搭建</h1>\n<h2 id=\"windows平台\"><a class=\"markdownIt-Anchor\" href=\"#windows平台\">#</a> windows 平台</h2>\n<h3 id=\"下载安装并配置环境变量\"><a class=\"markdownIt-Anchor\" href=\"#下载安装并配置环境变量\">#</a> 下载安装并配置环境变量</h3>\n<p>下载地址： <code>https://golang.google.cn/dl/</code> ，这里提供了不同平台的 go 版本，根据自己的平台选择下载。</p>\n<p>这里注意，安装路径选择一个比较好找的路径，例如： <code>c:/go</code> ，其他安装都选择” 下一步 “即可。</p>\n<p>安装完成后，把 <code>C:\\go\\bin</code>  目录添加到环境变量，这里就可以使用 go 了，在命令行输入  <code>go version</code>  查看版本，输出结果如下所示。</p>\n<pre><code>go version go1.16.6 windows/amd64\n</code></pre>\n<h3 id=\"配置go环境\"><a class=\"markdownIt-Anchor\" href=\"#配置go环境\">#</a> 配置 go 环境</h3>\n<pre><code>$env:GO111MODULE = &quot;on&quot;\n$env:GOPROXY = &quot;http://goproxy.cn&quot;\n</code></pre>\n<blockquote>\n<p>使用使用 go mod 管理库，需要科学上网</p>\n</blockquote>\n<h3 id=\"安装配置git\"><a class=\"markdownIt-Anchor\" href=\"#安装配置git\">#</a> 安装配置 git</h3>\n<pre><code>https://www.git-scm.com/download/\n</code></pre>\n<p>配置环境变量，命令行输入 git 测试</p>\n<h2 id=\"goroot和gopath\"><a class=\"markdownIt-Anchor\" href=\"#goroot和gopath\">#</a> goroot 和 gopath</h2>\n<p>goroot 就是 go 安装的根目录，gopath 就是 go 项目所在的路径，高版本 go 项目已经不再依赖 gopath 来管理项目，使用 go mod 来管理项目。</p>\n<h2 id=\"linux平台\"><a class=\"markdownIt-Anchor\" href=\"#linux平台\">#</a> Linux 平台</h2>\n<p>如果不是要在 Linux 平台敲 go 代码就不需要在 Linux 平台安装 Go，我们开发机上写好的 go 代码只需要跨平台编译（详见文章末尾的跨平台编译）好之后就可以拷贝到 Linux 服务器上运行了，这也是 go 程序跨平台易部署的优势。</p>\n<p>我们在版本选择页面选择并下载好 <code>go1.14.1.linux-amd64.tar.gz</code>  文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://dl.google.com/go/go1.14.1.linux-amd64.tar.gz</pre></td></tr></table></figure><p>将下载好的文件解压到 <code>/usr/local</code>  目录下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> -zxvf go1.14.1.linux-amd64.tar.gz -C /usr/local  <span class=\"token comment\"># 解压</span></pre></td></tr></table></figure><p>如果提示没有权限，加上 <code>sudo</code>  以 root 用户的身份再运行。执行完就可以在 <code>/usr/local/</code>  下看到 <code>go</code>  目录了。</p>\n<p>配置环境变量： Linux 下有两个文件可以配置环境变量，其中 <code>/etc/profile</code>  是对所有用户生效的； <code>$HOME/.profile</code>  是对当前用户生效的，根据自己的情况自行选择一个文件打开，添加如下两行代码，保存退出。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">GOROOT</span><span class=\"token operator\">=</span>/usr/local/go</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$GOROOT</span>/bin</pre></td></tr></table></figure><p>修改 <code>/etc/profile</code>  后要重启生效，修改 <code>$HOME/.profile</code>  后使用 source 命令加载 <code>$HOME/.profile</code>  文件即可生效。 检查：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>~ go version</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>go version go1.16.6 linux/amd64</pre></td></tr></table></figure><h2 id=\"mac平台\"><a class=\"markdownIt-Anchor\" href=\"#mac平台\">#</a> Mac 平台</h2>\n<p>下载可执行文件版，直接点击<strong>下一步</strong>安装即可，默认会将 go 安装到 <code>/usr/local/go</code>  目录下。</p>\n<p>上一步安装过程执行完毕后，可以打开终端窗口，输入 <code>go version</code>  命令，查看安装的 Go 版本。</p>\n<pre><code>go version go1.16.6 darwin/amd64\n</code></pre>\n<h2 id=\"开发工具简介\"><a class=\"markdownIt-Anchor\" href=\"#开发工具简介\">#</a> 开发工具简介</h2>\n<p>golang 的开发工具有很多，例如：</p>\n<ol>\n<li>vim</li>\n<li>sublime</li>\n<li>atom</li>\n<li>LiteIDE</li>\n<li>eclipse</li>\n<li>goland</li>\n<li>vscode</li>\n</ol>\n<h2 id=\"使用goland开发go应用\"><a class=\"markdownIt-Anchor\" href=\"#使用goland开发go应用\">#</a> 使用 goland 开发 go 应用</h2>\n<p>goland 是一款付费的、功能强大的 golang 集成开发环境，是 Jetbrain 公司的产品。下载地址： <code>https://www.jetbrains.com/go/</code> goland 非常智能，几乎不需要配置，安装即用。</p>\n<h2 id=\"使用vscode开发go应用\"><a class=\"markdownIt-Anchor\" href=\"#使用vscode开发go应用\">#</a> 使用 vscode 开发 go 应用</h2>\n<ol>\n<li>下载安装 vscode  <code>https://code.visualstudio.com/</code></li>\n<li>下载安装插件，参考文档： <code>https://marketplace.visualstudio.com/items?itemName=golang.go</code></li>\n<li>安装 code runner 运行脚本</li>\n</ol>\n<h1 id=\"go常用命令\"><a class=\"markdownIt-Anchor\" href=\"#go常用命令\">#</a> go 常用命令</h1>\n<h2 id=\"查看可用命令\"><a class=\"markdownIt-Anchor\" href=\"#查看可用命令\">#</a> 查看可用命令</h2>\n<p>直接在终端中输入  <code>go help</code>  即可显示所有的 go 命令以及相应命令功能简介，主要有下面这些:</p>\n<ul>\n<li>build: 编译包和依赖</li>\n<li>clean: 移除对象文件</li>\n<li>doc: 显示包或者符号的文档</li>\n<li>env: 打印 go 的环境信息</li>\n<li>bug: 启动错误报告</li>\n<li>fix: 运行 go tool fix</li>\n<li>fmt: 运行 gofmt 进行格式化</li>\n<li>generate: 从 processing source 生成 go 文件</li>\n<li>get: 下载并安装包和依赖</li>\n<li>install: 编译并安装包和依赖</li>\n<li>list: 列出包</li>\n<li>run: 编译并运行 go 程序</li>\n<li>test: 运行测试</li>\n<li>tool: 运行 go 提供的工具</li>\n<li>version: 显示 go 的版本</li>\n<li>vet: 运行 go tool vet</li>\n</ul>\n<h2 id=\"参考文档\"><a class=\"markdownIt-Anchor\" href=\"#参考文档\">#</a> 参考文档</h2>\n<pre><code>https://golang.org/doc/cmd\n</code></pre>\n<h1 id=\"golang开发-vscode快捷键\"><a class=\"markdownIt-Anchor\" href=\"#golang开发-vscode快捷键\">#</a> golang 开发 vscode 快捷键</h1>\n<h2 id=\"快捷键位置\"><a class=\"markdownIt-Anchor\" href=\"#快捷键位置\">#</a> 快捷键位置</h2>\n<pre><code>File-&gt;Preferences-&gt;Keyboard Shortcuts\n</code></pre>\n<h2 id=\"常用快捷键\"><a class=\"markdownIt-Anchor\" href=\"#常用快捷键\">#</a> 常用快捷键</h2>\n<pre><code>1. 行注释 ctrl + /\n2. 块注释 shift+alt+a (可以修改为ctrl+shift+/)\n3. ctrl+a 全选\n4. ctrl+c 复制\n5. ctrl+v 粘贴\n6. ctrl+shift+k 删除行\n7. ctrl+e查找文件\n8. ctrl+shift+p 打开设置命令行\n</code></pre>\n<h2 id=\"修改快捷键\"><a class=\"markdownIt-Anchor\" href=\"#修改快捷键\">#</a> 修改快捷键</h2>\n<ol>\n<li>打开快捷键  <code>File-&gt;Preferences-&gt;Keyboard Shortcuts</code></li>\n<li>双击要修改的快捷键</li>\n<li>键盘输入想要使用的快捷键</li>\n</ol>\n<h2 id=\"快速生成代码片段\"><a class=\"markdownIt-Anchor\" href=\"#快速生成代码片段\">#</a> 快速生成代码片段</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pkgm  main包<span class=\"token operator\">+</span>main主函数</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ff  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">var</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>forr <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> v <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fmain <span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">print</span><span class=\"token operator\">!</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"如何编写golang代码\"><a class=\"markdownIt-Anchor\" href=\"#如何编写golang代码\">#</a> 如何编写 golang 代码</h1>\n<h2 id=\"代码组织\"><a class=\"markdownIt-Anchor\" href=\"#代码组织\">#</a> 代码组织</h2>\n<p>go 应用使用<strong>包</strong>和<strong>模块</strong>来组织代码，包对应到文件系统就是文件夹，模块就是 **.go** 的 go 源文件。一个包中会有多个模块，或者多个子包。</p>\n<h2 id=\"go项目管理工具\"><a class=\"markdownIt-Anchor\" href=\"#go项目管理工具\">#</a> go 项目管理工具</h2>\n<p>早期的 go 项目使用 gopath 来管理项目，不方便而且容易出错，从 golang 1.11 开始使用 gomod 管理项目，当然还有第三方模块例如 govendor，我们给大家结束 gomod 的使用</p>\n<h2 id=\"实现步骤\"><a class=\"markdownIt-Anchor\" href=\"#实现步骤\">#</a> 实现步骤</h2>\n<ol>\n<li>创建项目</li>\n<li>初始化项目</li>\n<li>创建包</li>\n<li>创建模块</li>\n<li>相互调用</li>\n</ol>\n<h1 id=\"golang标识符-关键字-命名规则\"><a class=\"markdownIt-Anchor\" href=\"#golang标识符-关键字-命名规则\">#</a> golang 标识符、关键字、命名规则</h1>\n<h2 id=\"标识符\"><a class=\"markdownIt-Anchor\" href=\"#标识符\">#</a> 标识符</h2>\n<p>标识符的英文是 <code>identifier</code> ，通俗的讲，就是给变量、常量、函数、方法、结构体、数组、切片、接口起名字。</p>\n<h3 id=\"标识符的组成\"><a class=\"markdownIt-Anchor\" href=\"#标识符的组成\">#</a> 标识符的组成</h3>\n<ol>\n<li>标识符由数字、字母和下划线 ( <code>_</code> ) 组成。123 abc _</li>\n<li>只能以字母和下划线 ( <code>_</code> )<strong> 开头</strong>。abc123 _sysVar 123abc</li>\n<li>标识符区分大小写。 name Name NAME</li>\n</ol>\n<h3 id=\"举例说明标识符的命名\"><a class=\"markdownIt-Anchor\" href=\"#举例说明标识符的命名\">#</a> 举例说明标识符的命名</h3>\n<p><strong>正确的命名</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> _sys <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>错误的标识符</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> 1name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> <span class=\"token operator\">&amp;</span>age <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> <span class=\"token operator\">!</span>email</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go语言关键字\"><a class=\"markdownIt-Anchor\" href=\"#go语言关键字\">#</a> go 语言关键字</h2>\n<p>go 语言提供了 25 个关键字，如下所示。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">break</th>\n<th style=\"text-align:left\">default</th>\n<th style=\"text-align:left\">func</th>\n<th style=\"text-align:left\">interface</th>\n<th style=\"text-align:left\">select</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">case</td>\n<td style=\"text-align:left\">defer</td>\n<td style=\"text-align:left\">go</td>\n<td style=\"text-align:left\">map</td>\n<td style=\"text-align:left\">struct</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">chan</td>\n<td style=\"text-align:left\">else</td>\n<td style=\"text-align:left\">goto</td>\n<td style=\"text-align:left\">package</td>\n<td style=\"text-align:left\">switch</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">const</td>\n<td style=\"text-align:left\">fallthrough</td>\n<td style=\"text-align:left\">if</td>\n<td style=\"text-align:left\">range</td>\n<td style=\"text-align:left\">type</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">continue</td>\n<td style=\"text-align:left\">for</td>\n<td style=\"text-align:left\">import</td>\n<td style=\"text-align:left\">return</td>\n<td style=\"text-align:left\">var</td>\n</tr>\n</tbody>\n</table>\n<p>除了以上介绍的这些关键字，Go 语言还有 36 个预定义标识符，其中包含了基本类型的名称和一些基本的内置函数，见下表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">append</th>\n<th style=\"text-align:left\">bool</th>\n<th style=\"text-align:left\">byte</th>\n<th style=\"text-align:left\">cap</th>\n<th style=\"text-align:left\">close</th>\n<th style=\"text-align:left\">complex</th>\n<th style=\"text-align:left\">complex64</th>\n<th style=\"text-align:left\">complex128</th>\n<th style=\"text-align:left\">uint16</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">copy</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">float32</td>\n<td style=\"text-align:left\">float64</td>\n<td style=\"text-align:left\">imag</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">int8</td>\n<td style=\"text-align:left\">int16</td>\n<td style=\"text-align:left\">uint32</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int32</td>\n<td style=\"text-align:left\">int64</td>\n<td style=\"text-align:left\">iota</td>\n<td style=\"text-align:left\">len</td>\n<td style=\"text-align:left\">make</td>\n<td style=\"text-align:left\">new</td>\n<td style=\"text-align:left\">nil</td>\n<td style=\"text-align:left\">panic</td>\n<td style=\"text-align:left\">uint64</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">print</td>\n<td style=\"text-align:left\">println</td>\n<td style=\"text-align:left\">real</td>\n<td style=\"text-align:left\">recover</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">uint</td>\n<td style=\"text-align:left\">uint8</td>\n<td style=\"text-align:left\">uintptr</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"go语言命名规范\"><a class=\"markdownIt-Anchor\" href=\"#go语言命名规范\">#</a> go 语言命名规范</h2>\n<h3 id=\"go是一门区分大小写的语言\"><a class=\"markdownIt-Anchor\" href=\"#go是一门区分大小写的语言\">#</a> Go 是一门区分大小写的语言</h3>\n<p>命名规则涉及变量、常量、全局函数、结构、接口、方法等的命名。 Go 语言从语法层面进行了以下限定：任何需要对外暴露的名字必须以大写字母开头，不需要对外暴露的则应该以小写字母开头。</p>\n<p>当命名（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如： <code>GetUserName</code> ，那么使用这种形式的标识符的对象就<strong>可以被外部包的代码所使用</strong>（客户端程序需要先导入这个包），这被称为导出（像面向对象语言中的  <code>public</code> ）； <strong>命名如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的</strong>（像面向对象语言中的  <code>private</code>  ）</p>\n<h3 id=\"包名称\"><a class=\"markdownIt-Anchor\" href=\"#包名称\">#</a> 包名称</h3>\n<p>保持 <code>package</code>  的名字和目录保持一致，尽量采取有意义的包名，简短，有意义，尽量和标准库不要冲突。包名应该为<strong>小写</strong>单词，不要使用下划线或者混合大小写。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> dao</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">package</span> service</pre></td></tr></table></figure><h3 id=\"文件命名\"><a class=\"markdownIt-Anchor\" href=\"#文件命名\">#</a> 文件命名</h3>\n<p>尽量采取有意义的文件名，简短，有意义，应该为<strong>小写</strong>单词，使用<strong>下划线</strong>分隔各个单词。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>customer_dao<span class=\"token punctuation\">.</span><span class=\"token keyword\">go</span></pre></td></tr></table></figure><h3 id=\"结构体命名\"><a class=\"markdownIt-Anchor\" href=\"#结构体命名\">#</a> 结构体命名</h3>\n<p>采用<strong>驼峰命名法</strong>，首字母根据访问控制大写或者小写</p>\n<p><code>struct</code>  申明和初始化格式采用多行，例如下面：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> CustomerOrder <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Name <span class=\"token builtin\">string</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Address <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>order <span class=\"token operator\">:=</span> CustomerOrder<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"北京海淀\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"接口命名\"><a class=\"markdownIt-Anchor\" href=\"#接口命名\">#</a> 接口命名</h3>\n<p>命名规则基本和上面的结构体类型</p>\n<p>单个函数的结构名以 <strong>“er”</strong> 作为后缀，例如  <code>Reader</code>  ,  <code>Writer</code>  。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Reader <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     <span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>p <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"变量命名\"><a class=\"markdownIt-Anchor\" href=\"#变量命名\">#</a> 变量命名</h3>\n<p>和结构体类似，变量名称一般遵循<strong>驼峰法</strong>，首字母根据访问控制原则大写或者小写，但遇到特有名词时，需要遵循以下规则：</p>\n<p>如果变量为私有，且特有名词为首个单词，则使用小写，如 appService 若变量类型为 bool 类型，则名称应以 Has, Is, Can 或 Allow 开头</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> isExist <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> hasConflict <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> canManage <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> allowGitHook <span class=\"token builtin\">bool</span></pre></td></tr></table></figure><h3 id=\"常量命名\"><a class=\"markdownIt-Anchor\" href=\"#常量命名\">#</a> 常量命名</h3>\n<p>常量均需使用全部<strong>大写</strong>字母组成，并使用<strong>下划线分词</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> APP_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.duoke360.com\"</span></pre></td></tr></table></figure><p>如果是枚举类型的常量，需要先创建相应类型：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Scheme <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    HTTP  Scheme <span class=\"token operator\">=</span> <span class=\"token string\">\"http\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HTTPS Scheme <span class=\"token operator\">=</span> <span class=\"token string\">\"https\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"错误处理\"><a class=\"markdownIt-Anchor\" href=\"#错误处理\">#</a> 错误处理</h3>\n<p>错误处理的原则就是不能丢弃任何有返回 err 的调用，不要使用 _ 丢弃，必须全部处理。接收到错误，要么返回 err，或者使用 log 记录下来尽早 return：一旦有错误发生，马上返回，尽量不要使用 panic，除非你知道你在做什么，错误描述如果是英文必须为小写，不需要标点结尾，采用独立的错误流进行处理</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 错误写法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 错误处理</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 正常代码</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 正确写法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 错误处理</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token comment\">// 或者继续</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 正常代码</span></pre></td></tr></table></figure><h3 id=\"单元测试\"><a class=\"markdownIt-Anchor\" href=\"#单元测试\">#</a> 单元测试</h3>\n<p>单元测试文件名命名规范为  <code>example_test.go</code>  测试用例的函数名称必须以  <code>Test</code>  开头，例如： <code>TestExample</code>  每个重要的函数都要首先编写测试用例，测试用例和正规代码一起提交方便进行回归测试 。</p>\n<h1 id=\"golang变量\"><a class=\"markdownIt-Anchor\" href=\"#golang变量\">#</a> golang 变量</h1>\n<p>变量是计算机语言中能<strong>储存</strong>计算结果或能表示值的抽象概念。不同的变量保存的<strong>数据类型</strong>可能会不一样。</p>\n<h2 id=\"声明变量\"><a class=\"markdownIt-Anchor\" href=\"#声明变量\">#</a> 声明变量</h2>\n<p>Go 语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且 Go 语言的变量声明后<strong>必须使用</strong>。</p>\n<p><strong>声明变量的语法</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> identifier <span class=\"token keyword\">type</span></pre></td></tr></table></figure><p><code>var</code> ：声明变量关键字</p>\n<p><code>identifier</code> ：变量名称</p>\n<p><code>type</code> ：变量类型</p>\n<p><strong>例如</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> ok <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"批量声明\"><a class=\"markdownIt-Anchor\" href=\"#批量声明\">#</a> 批量声明</h3>\n<p>使用一个 <code>var</code>  关键字，把一些变量写在一个括号 <code>()</code>  里</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tage  <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tok   <span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"变量的初始化\"><a class=\"markdownIt-Anchor\" href=\"#变量的初始化\">#</a> 变量的初始化</h2>\n<p>Go 语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为 <code>0</code> 。 字符串变量的默认值为空字符串 <code>“”</code> 。 布尔型变量默认为 <code>false</code> 。 切片、函数、指针变量的默认为 <code>nil</code> 。</p>\n<p><strong>变量初始化语法</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> 变量名 类型 <span class=\"token operator\">=</span> 表达式</pre></td></tr></table></figure><p><strong>例如</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"老郭\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">var</span> site <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"www.duoke360.com\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>类型推导</strong></p>\n<p>我们在声明变量时，可以根据初始化值进行类型推导，从而省略类型。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"老郭\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">var</span> site <span class=\"token operator\">=</span> <span class=\"token string\">\"www.duoke360.com\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>初始化多个变量</strong></p>\n<p>可以一次初始化多个变量，中间用逗号分隔。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> name<span class=\"token punctuation\">,</span> site<span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token string\">\"老郭\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"www.duoke360.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"短变量声明\"><a class=\"markdownIt-Anchor\" href=\"#短变量声明\">#</a> 短变量声明</h2>\n<p>在<strong>函数内部</strong>，可以使用  <code>:=</code>  运算符对变量进行声明和初始化。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tname <span class=\"token operator\">:=</span> <span class=\"token string\">\"老郭\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tsite <span class=\"token operator\">:=</span> <span class=\"token string\">\"www.duoke360.com\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>注意：这种方法只适合在函数内部，函数外面不能使用。</p>\n</blockquote>\n<h2 id=\"匿名变量\"><a class=\"markdownIt-Anchor\" href=\"#匿名变量\">#</a> 匿名变量</h2>\n<p>如果我们接收到多个变量，有一些变量使用不到，可以使用下划线 <code>_</code> 表示变量名称，这种变量叫做匿名变量。例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">getNameAndAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"老郭\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tname<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> <span class=\"token function\">getNameAndAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"go语言常量\"><a class=\"markdownIt-Anchor\" href=\"#go语言常量\">#</a> go 语言常量</h1>\n<p>常量，就是在程序编译阶段就确定下来的值，而程序在运行时则无法改变值，在 Go 程序中，常量可以数值类型（包括整形，浮点型和复数类型），布尔类型，字符串类型等</p>\n<p>定义常量的语法</p>\n<p>定义一个常量使用 const 关键字，语法格式如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> constantName <span class=\"token punctuation\">[</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>value</pre></td></tr></table></figure><p><code>const</code>  : 定义常量关键字</p>\n<p><code>constantName</code>  : 常量名称</p>\n<p><code>type</code> : 常量类型</p>\n<p><code>value</code> : 常量的值</p>\n<p>实例</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">const</span> PI  <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">const</span> PI2 <span class=\"token operator\">=</span> <span class=\"token number\">3.15</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PI:%v\\n\"</span><span class=\"token punctuation\">,</span>PI<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">const</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\ta <span class=\"token operator\">=</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tb<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a:%v b:%v\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">const</span> w<span class=\"token punctuation\">,</span>h <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"w:%v h:%v\\n\"</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"iota\"><a class=\"markdownIt-Anchor\" href=\"#iota\">#</a> iota</h2>\n<p>iota 比较特殊，可以被认为是一个可被编译器修改的常量，它默认开始值是 0，每调用一次加 1，遇到 const 关键字时被重置为 0</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \ta1 <span class=\"token operator\">=</span><span class=\"token boolean\">iota</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    \ta2 <span class=\"token operator\">=</span><span class=\"token boolean\">iota</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \ta3 <span class=\"token operator\">=</span><span class=\"token boolean\">iota</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1:%v\\n\"</span><span class=\"token punctuation\">,</span>a1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a2:%v\\n\"</span><span class=\"token punctuation\">,</span>a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a3:%v\\n\"</span><span class=\"token punctuation\">,</span>a3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"go语言数据类型\"><a class=\"markdownIt-Anchor\" href=\"#go语言数据类型\">#</a> go 语言数据类型</h1>\n<p>在 Go 编程语言中，数据类型用于声明函数和变量。</p>\n<p>数据类型的出现是为了把数据分成所需<strong>内存大小</strong>不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。</p>\n<p>Go 语言按类别有以下几种数据类型：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">类型和描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\"><strong>布尔型</strong> 布尔型的值只可以是常量 true 或者 false。一个简单的例子：var b bool = true。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\"><strong>数字类型</strong> 整型 int 和浮点型 float32、float64，Go 语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\"><strong>字符串类型:</strong> 字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 语言的字符串的字节使用 UTF-8 编码标识 Unicode 文本。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\"><strong>派生类型:</strong> 包括：(a) 指针类型（Pointer）(b) 数组类型 © 结构化类型 (struct)(d) Channel 类型 (e) 函数类型 (f) 切片类型 (g) 接口类型（interface）(h) Map 类型</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数字类型\"><a class=\"markdownIt-Anchor\" href=\"#数字类型\">#</a> 数字类型</h2>\n<p>Go 也有基于架构的类型，例如：int、uint 和 uintptr。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">类型和描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\"><strong>uint8</strong> 无符号 8 位整型 (0 到 255)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\"><strong>uint16</strong> 无符号 16 位整型 (0 到 65535)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\"><strong>uint32</strong> 无符号 32 位整型 (0 到 4294967295)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\"><strong>uint64</strong> 无符号 64 位整型 (0 到 18446744073709551615)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\"><strong>int8</strong> 有符号 8 位整型 (-128 到 127)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\"><strong>int16</strong> 有符号 16 位整型 (-32768 到 32767)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\"><strong>int32</strong> 有符号 32 位整型 (-2147483648 到 2147483647)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\"><strong>int64</strong> 有符号 64 位整型 (-9223372036854775808 到 9223372036854775807)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"浮点型\"><a class=\"markdownIt-Anchor\" href=\"#浮点型\">#</a> 浮点型</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">类型和描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\"><strong>float32</strong> IEEE-754 32 位浮点型数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\"><strong>float64</strong> IEEE-754 64 位浮点型数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\"><strong>complex64</strong> 32 位实数和虚数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\"><strong>complex128</strong> 64 位实数和虚数</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"其他数字类型\"><a class=\"markdownIt-Anchor\" href=\"#其他数字类型\">#</a> 其他数字类型</h2>\n<p>以下列出了其他更多的数字类型：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">类型和描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\"><strong>byte</strong> 类似 uint8</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\"><strong>rune</strong> 类似 int32</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\"><strong>uint</strong> 32 或 64 位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\"><strong>int</strong> 与 uint 一样大小</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\"><strong>uintptr</strong> 无符号整型，用于存放一个指针</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"go语言布尔类型\"><a class=\"markdownIt-Anchor\" href=\"#go语言布尔类型\">#</a> go 语言布尔类型</h1>\n<p>go 语言中的布尔类型有两个常量值： <code>true</code>  和 <code>false</code> 。布尔类型经常用在<strong>条件判断</strong>语句，或者<strong>循环语句</strong>。也可以用在<strong>逻辑表达式</strong>中。</p>\n<h2 id=\"布尔类型\"><a class=\"markdownIt-Anchor\" href=\"#布尔类型\">#</a> 布尔类型</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> b1 <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> b2 <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> b3 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">var</span> b4 <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tb5 <span class=\"token operator\">:=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tb6 <span class=\"token operator\">:=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b1: %v\\n\"</span><span class=\"token punctuation\">,</span> b1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b2: %v\\n\"</span><span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b3: %v\\n\"</span><span class=\"token punctuation\">,</span> b3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b4: %v\\n\"</span><span class=\"token punctuation\">,</span> b4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b5: %v\\n\"</span><span class=\"token punctuation\">,</span> b5<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b6: %v\\n\"</span><span class=\"token punctuation\">,</span> b6<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>b1: true\nb2: false\nb3: true\nb4: false\nb5: true\nb6: false\n</code></pre>\n<h2 id=\"用在条件判断中\"><a class=\"markdownIt-Anchor\" href=\"#用在条件判断中\">#</a> 用在条件判断中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tok <span class=\"token operator\">:=</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> ok <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你已经成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你还未成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>你已经成年\n</code></pre>\n<h2 id=\"用在循环语句中\"><a class=\"markdownIt-Anchor\" href=\"#用在循环语句中\">#</a> 用在循环语句中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tcount <span class=\"token operator\">:=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"用在逻辑表达式中\"><a class=\"markdownIt-Anchor\" href=\"#用在逻辑表达式中\">#</a> 用在逻辑表达式中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tgender <span class=\"token operator\">:=</span> <span class=\"token string\">\"男\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">18</span> <span class=\"token operator\">&amp;&amp;</span> gender <span class=\"token operator\">==</span> <span class=\"token string\">\"男\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你是成年男子\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>注意：不能使用 <code>0</code>  和非 <code>0</code>  表示真假</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\ti <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> i <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// 编译错误</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"go语言数字类型\"><a class=\"markdownIt-Anchor\" href=\"#go语言数字类型\">#</a> go 语言数字类型</h1>\n<p>Go 语言支持整型和浮点型数字，并且原生支持复数，其中位的运算采用补码。</p>\n<p>Go 也有基于架构的类型，例如： <code>int</code> 、 <code>uint</code>  和  <code>uintptr</code> 。</p>\n<p>这些类型的长度都是根据运行程序所在的操作系统类型所决定的：</p>\n<ul>\n<li><code>int</code>  和  <code>uint</code>  在 32 位操作系统上，它们均使用 32 位（4 个字节），在 64 位操作系统上，它们均使用 64 位（8 个字节）。</li>\n<li><code>uintptr</code>  的长度被设定为足够存放一个指针即可。</li>\n</ul>\n<p>Go 语言中没有  <code>float</code>  类型。（Go 语言中只有  <code>float32</code>  和  <code>float64</code> ）没有 double 类型。</p>\n<p>与操作系统架构无关的类型都有固定的大小，并在类型的名称中就可以看出来：</p>\n<p>整数：</p>\n<ul>\n<li>int8（-128 -&gt; 127）</li>\n<li>int16（-32768 -&gt; 32767）</li>\n<li>int32（-2,147,483,648 -&gt; 2,147,483,647）</li>\n<li>int64（-9,223,372,036,854,775,808 -&gt; 9,223,372,036,854,775,807）</li>\n</ul>\n<p>无符号整数：</p>\n<ul>\n<li>uint8（0 -&gt; 255）</li>\n<li>uint16（0 -&gt; 65,535）</li>\n<li>uint32（0 -&gt; 4,294,967,295）</li>\n<li>uint64（0 -&gt; 18,446,744,073,709,551,615）</li>\n</ul>\n<p>浮点型（IEEE-754 标准）：</p>\n<ul>\n<li>float32（± 1e-45 -&gt; ± 3.4 * 1e38）</li>\n<li>float64（± 5 * 1e-324 -&gt; 107 * 1e308）</li>\n</ul>\n<p>int 型是计算最快的一种类型。</p>\n<p>整型的零值为 0，浮点型的零值为 0.0。</p>\n<h2 id=\"实例\"><a class=\"markdownIt-Anchor\" href=\"#实例\">#</a> 实例</h2>\n<p>下面实例演示了，各个数字类型的长度和取值范围</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"math\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token string\">\"unsafe\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">var</span> i8 <span class=\"token builtin\">int8</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> i16 <span class=\"token builtin\">int16</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">var</span> i32 <span class=\"token builtin\">int32</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">var</span> i64 <span class=\"token builtin\">int64</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">var</span> ui8 <span class=\"token builtin\">uint8</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">var</span> ui16 <span class=\"token builtin\">uint16</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">var</span> ui32 <span class=\"token builtin\">uint32</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">var</span> ui64 <span class=\"token builtin\">uint64</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> i8<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MinInt8<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxInt8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> i16<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MinInt16<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxInt16<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> i32<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MinInt32<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxInt32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> i64<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MinInt64<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxInt64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> ui8<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>ui8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxUint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> ui16<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>ui16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxUint16<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> ui32<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>ui32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxUint32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> ui64<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>ui64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">uint64</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>MaxUint64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">var</span> f32 <span class=\"token builtin\">float32</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">var</span> f64 <span class=\"token builtin\">float64</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> f32<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>f32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>math<span class=\"token punctuation\">.</span>MaxFloat32<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxFloat32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> f64<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>f64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>math<span class=\"token punctuation\">.</span>MaxFloat64<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>MaxFloat64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">var</span> ui <span class=\"token builtin\">uint</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tui <span class=\"token operator\">=</span> <span class=\"token function\">uint</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>MaxUint64<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 再 + 1 会导致 overflows 错误</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> ui<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ui<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token keyword\">var</span> imax<span class=\"token punctuation\">,</span> imin <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\timax <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>MaxInt64<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 再 + 1 会导致 overflows 错误</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\timin <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>MinInt64<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 再 - 1 会导致 overflows 错误</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T %dB %v~%v\\n\"</span><span class=\"token punctuation\">,</span> imax<span class=\"token punctuation\">,</span> unsafe<span class=\"token punctuation\">.</span><span class=\"token function\">Sizeof</span><span class=\"token punctuation\">(</span>imax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> imin<span class=\"token punctuation\">,</span> imax<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>int8 1B -128~127\nint16 2B -32768~32767\nint32 4B -2147483648~2147483647\nint64 8B -9223372036854775808~9223372036854775807\nuint8 1B 0~255\nuint16 2B 0~65535\nuint32 4B 0~4294967295\nuint64 8B 0~18446744073709551615\nfloat32 4B -3.4028234663852886e+38~3.4028234663852886e+38\nfloat64 8B -1.7976931348623157e+308~1.7976931348623157e+308\nuint 8B 0~18446744073709551615\nint 8B -9223372036854775808~9223372036854775807\n</code></pre>\n<h2 id=\"以二进制-八进制或十六进制浮点数的格式定义数字\"><a class=\"markdownIt-Anchor\" href=\"#以二进制-八进制或十六进制浮点数的格式定义数字\">#</a> 以二进制、八进制或十六进制浮点数的格式定义数字</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 十进制</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%b \\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1010  占位符 % b 表示二进制</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 八进制  以 0 开头</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">077</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%o \\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 77</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 十六进制  以 0x 开头</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">var</span> c <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xff</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x \\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ff</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X \\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token comment\">// FF</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>10 \n1010 \n77 \nff \nFF \n</code></pre>\n<h2 id=\"浮点型-2\"><a class=\"markdownIt-Anchor\" href=\"#浮点型-2\">#</a> 浮点型</h2>\n<p>Go 语言支持两种浮点型数： <code>float32</code>  和 <code>float64</code> 。这两种浮点型数据格式遵循 <code>IEEE 754</code>  标准：  <code>float32</code>  的浮点数的最大范围约为  <code>3.4e38</code> ，可以使用常量定义： <code>math.MaxFloat32</code> 。  <code>float64</code>  的浮点数的最大范围约为  <code>1.8e308</code> ，可以使用一个常量定义： <code>math.MaxFloat64</code> 。</p>\n<p>打印浮点数时，可以使用 <code>fmt</code>  包配合动词 <code>%f</code> ，代码如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"math\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\\n\"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>Pi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.2f\\n\"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>Pi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"复数\"><a class=\"markdownIt-Anchor\" href=\"#复数\">#</a> 复数</h2>\n<p>complex64 和 complex128</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> c1 <span class=\"token builtin\">complex64</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2i</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> c2 <span class=\"token builtin\">complex128</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3i</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>复数有实部和虚部，complex64 的实部和虚部为 32 位，complex128 的实部和虚部为 64 位。</p>\n<h1 id=\"golang字符串\"><a class=\"markdownIt-Anchor\" href=\"#golang字符串\">#</a> golang 字符串</h1>\n<p>一个 Go 语言字符串是一个任意<strong>字节的常量序列</strong>。[] byte</p>\n<h2 id=\"go语言字符串字面量\"><a class=\"markdownIt-Anchor\" href=\"#go语言字符串字面量\">#</a> go 语言字符串字面量</h2>\n<p>在 Go 语言中，字符串字面量使用双引号  <code>&quot;&quot;</code>  或者反引号  <code>'</code>  来创建。双引号用来创建可解析的字符串，支持转义，但不能用来引用多行；反引号用来创建原生的字符串字面量，可能由多行组成，但不支持转义，并且可以包含除了反引号外其他所有字符。双引号创建可解析的字符串应用最广泛，反引号用来创建原生的字符串则多用于书写多行消息，HTML 以及正则表达式。</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> str1 <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> html <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>hello golang<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t`</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str1: %v\\n\"</span><span class=\"token punctuation\">,</span> str1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html: %v\\n\"</span><span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>str1<span class=\"token punctuation\">:</span> hello world</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>html<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>hello golang<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"go语言字符串连接\"><a class=\"markdownIt-Anchor\" href=\"#go语言字符串连接\">#</a> go 语言字符串连接</h2>\n<p><strong>使用加号</strong></p>\n<p>虽然 Go 语言中的字符串是不可变的，但是字符串支持  <code>+</code>  级联操作和 <code>+=</code>  追加操作，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tname <span class=\"token operator\">:=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> age</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg: %v\\n\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tmsg <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tmsg <span class=\"token operator\">+=</span> name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tmsg <span class=\"token operator\">+=</span> <span class=\"token string\">\" \"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tmsg <span class=\"token operator\">+=</span> age</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg: %v\\n\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>golang 里面的字符串都是不可变的，每次运算都会产生一个新的字符串，所以会产生很多临时的无用的字符串，不仅没有用，还会给 gc 带来额外的负担，所以性能比较差</p>\n</blockquote>\n<p><strong>使用 <code>fmt.Sprintf()</code>  函数</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tname <span class=\"token operator\">:=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s,%s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg: %v\\n\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msg<span class=\"token punctuation\">:</span> tom<span class=\"token punctuation\">,</span><span class=\"token number\">20</span></pre></td></tr></table></figure><blockquote>\n<p>内部使用  <code>[]byte</code>  实现，不像直接运算符这种会产生很多临时的字符串，但是内部的逻辑比较复杂，有很多额外的判断，还用到了  <code>interface</code> ，所以性能也不是很好</p>\n</blockquote>\n<p><strong> <code>strings.Join()</code> </strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"strings\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tname <span class=\"token operator\">:=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg: %v\\n\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>msg: tom,20\n</code></pre>\n<blockquote>\n<p>join 会先根据字符串数组的内容，计算出一个拼接之后的长度，然后申请对应大小的内存，一个一个字符串填入，在已有一个数组的情况下，这种效率会很高，但是本来没有，去构造这个数据的代价也不小</p>\n</blockquote>\n<p><strong> <code>buffer.WriteString()</code> </strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"bytes\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">var</span> buffer bytes<span class=\"token punctuation\">.</span>Buffer</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"buffer.String(): %v\\n\"</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>这个比较理想，可以当成可变字符使用，对内存的增长也有优化，如果能预估字符串的长度，还可以用  <code>buffer.Grow()</code>  接口来设置 capacity</p>\n</blockquote>\n<h2 id=\"go语言字符串转义字符\"><a class=\"markdownIt-Anchor\" href=\"#go语言字符串转义字符\">#</a> go 语言字符串转义字符</h2>\n<p>Go 语言的字符串常见转义符包含回车、换行、单双引号、制表符等，如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">转义符</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>\\r</code></td>\n<td style=\"text-align:left\">回车符（返回行首）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>\\n</code></td>\n<td style=\"text-align:left\">换行符（直接跳到下一行的同列位置）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>\\t</code></td>\n<td style=\"text-align:left\">制表符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>\\'</code></td>\n<td style=\"text-align:left\">单引号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>\\&quot;</code></td>\n<td style=\"text-align:left\">双引号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>\\\\</code></td>\n<td style=\"text-align:left\">反斜杠</td>\n</tr>\n</tbody>\n</table>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\\tworld\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"c:\\\\test\\\\\\\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>hello\tworld\n&quot;c:\\test\\&quot;\n</code></pre>\n<h2 id=\"go语言字符串切片操作\"><a class=\"markdownIt-Anchor\" href=\"#go语言字符串切片操作\">#</a> go 语言字符串切片操作</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tstr <span class=\"token operator\">:=</span> <span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tn <span class=\"token operator\">:=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tm <span class=\"token operator\">:=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 获取字符串索引位置为 n 的原始字节</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">:</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 截取得字符串索引位置为 n 到 m-1 的字符串</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 截取得字符串索引位置为 n 到 len (s)-1 的字符串</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 截取得字符串索引位置为 0 到 m-1 的字符串</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>108\nlo\nlo world\nhello\n</code></pre>\n<h2 id=\"go语言字符串常用方法\"><a class=\"markdownIt-Anchor\" href=\"#go语言字符串常用方法\">#</a> go 语言字符串常用方法</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">len(str)</td>\n<td style=\"text-align:left\">求长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+ 或 fmt.Sprintf</td>\n<td style=\"text-align:left\">拼接字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">strings.Split</td>\n<td style=\"text-align:left\">分割</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">strings.contains</td>\n<td style=\"text-align:left\">判断是否包含</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">strings.HasPrefix,strings.HasSuffix</td>\n<td style=\"text-align:left\">前缀 / 后缀判断</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">strings.Index(),strings.LastIndex()</td>\n<td style=\"text-align:left\">子串出现的位置</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">strings.Join(a[]string, sep string)</td>\n<td style=\"text-align:left\">join 操作</td>\n</tr>\n</tbody>\n</table>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"strings\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ts <span class=\"token operator\">:=</span> <span class=\"token string\">\"hello world！\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"len(s): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strings.Split(s, \\\"\\\"): %v\\n\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strings.Contains(s, \\\"hello\\\"): %v\\n\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strings.HasPrefix(s, \\\"hello\\\"): %v\\n\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">HasPrefix</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strings.HasSuffix(s, \\\"world！\\\"): %v\\n\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">HasSuffix</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"world！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strings.Index(s, \\\"l\\\"): %v\\n\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Index</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"l\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strings.LastIndex(s, \\\"l\\\"): %v\\n\"</span><span class=\"token punctuation\">,</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">LastIndex</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">\"l\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>len(s): 14\nstrings.Split(s, &quot;&quot;): [hello world！]\nstrings.Contains(s, &quot;hello&quot;): true\nstrings.HasPrefix(s, &quot;hello&quot;): true\nstrings.HasSuffix(s, &quot;world！&quot;): true\nstrings.Index(s, &quot;l&quot;): 2\nstrings.LastIndex(s, &quot;l&quot;): 9\n</code></pre>\n<h2 id=\"byte和rune类型\"><a class=\"markdownIt-Anchor\" href=\"#byte和rune类型\">#</a> byte 和 rune 类型</h2>\n<p>组成每个字符串的元素叫做 “字符”，可以通过遍历或者单个获取字符串元素获得字符。 字符用单引号（’）包裹起来，如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token char\">'华'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v,%c\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %v,%c\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: 21326,华\nb: 97,a\n</code></pre>\n<p>Go 语言的字符有以下两种：</p>\n<ol>\n<li><code>uint8</code>  类型，或者叫 byte 型，代表了 <code>ASCII码</code> 的一个字符。</li>\n<li><code>rune</code>  类型，代表一个  <code>UTF-8字符</code> 。</li>\n</ol>\n<p>当需要处理中文、日文或者其他复合字符时，则需要用到 <code>rune</code>  类型。 <code>rune</code>  类型实际是一个 <code>int32</code> 。</p>\n<p>Go 使用了特殊的 rune 类型来处理 Unicode，让基于 Unicode 的文本处理更为方便，也可以使用 byte 型进行默认字符串处理，性能和扩展性都有照顾。</p>\n<h1 id=\"golang格式化输出\"><a class=\"markdownIt-Anchor\" href=\"#golang格式化输出\">#</a> golang 格式化输出</h1>\n<p>下面实例使用到的结构体</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Website <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t    Name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 定义结构体变量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> site <span class=\"token operator\">=</span> Website<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span><span class=\"token string\">\"duoke360\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"占位符\"><a class=\"markdownIt-Anchor\" href=\"#占位符\">#</a> 占位符</h2>\n<p><strong>普通占位符</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>占位符\t\t\t\t\t\t说明\t\t\t\t\t\t举例\t\t\t\t\t\t\t\t\t\t输出</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">%</span>v\t\t相应值的默认格式。\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v\"</span><span class=\"token punctuation\">,</span> site<span class=\"token punctuation\">)</span>，<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%+v\"</span><span class=\"token punctuation\">,</span> site<span class=\"token punctuation\">)</span>\t<span class=\"token punctuation\">&#123;</span>duoke360<span class=\"token punctuation\">&#125;</span>，<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span>duoke360<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t在打印结构体时，“加号”标记（<span class=\"token operator\">%</span><span class=\"token operator\">+</span>v）会添加字段名</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">%</span>#v\t\t相应值的Go语法表示\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#v\"</span><span class=\"token punctuation\">,</span> site<span class=\"token punctuation\">)</span>\t\t\t\t\t\tmain<span class=\"token punctuation\">.</span>Website<span class=\"token punctuation\">&#123;</span>Name<span class=\"token punctuation\">:</span><span class=\"token string\">\"duoke360\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">%</span>T\t\t相应值的类型的Go语法表示\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T\"</span><span class=\"token punctuation\">,</span> site<span class=\"token punctuation\">)</span>\t\t\t\t\t\tmain<span class=\"token punctuation\">.</span>Website</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">%</span><span class=\"token operator\">%</span>\t\t字面上的百分号，并非值的占位符\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%%\"</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token operator\">%</span></pre></td></tr></table></figure><p><strong>布尔占位符</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>占位符\t\t\t\t\t\t说明\t\t\t\t\t\t举例\t\t\t\t\t\t\t\t\t\t输出</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">%</span>t\t\t单词 <span class=\"token boolean\">true</span> 或 <span class=\"token boolean\">false</span>。\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%t\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t<span class=\"token boolean\">true</span></pre></td></tr></table></figure><p><strong>整数占位符</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>占位符\t\t\t\t\t\t说明\t\t\t\t\t\t举例\t\t\t\t\t\t\t\t\t输出</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">%</span>b\t\t二进制表示\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t<span class=\"token number\">101</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">%</span>c\t\t相应Unicode码点所表示的字符\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E2D</span><span class=\"token punctuation\">)</span>\t\t\t\t中</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">%</span>d\t\t十进制表示\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">)</span>\t\t\t\t\t<span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">%</span>o\t\t八进制表示\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%o\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\t\t\t\t\t<span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">%</span>q\t\t单引号围绕的字符字面值，由Go语法安全地转义\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%q\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E2D</span><span class=\"token punctuation\">)</span>\t\t\t\t<span class=\"token char\">'中'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">%</span>x\t\t十六进制表示，字母形式为小写 a<span class=\"token operator\">-</span>f\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span>\t\t\t\t\td</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">%</span>X\t\t十六进制表示，字母形式为大写 A<span class=\"token operator\">-</span>F\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span>\t\t\t\t\tD</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">%</span>U\t\tUnicode格式：U<span class=\"token operator\">+</span><span class=\"token number\">1234</span>，等同于 <span class=\"token string\">\"U+%04X\"</span>\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%U\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E2D</span><span class=\"token punctuation\">)</span>\t\t\t\tU<span class=\"token operator\">+</span>4E2D</pre></td></tr></table></figure><p><strong>浮点数和复数的组成部分（实部和虚部）</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>占位符\t\t\t\t\t\t说明\t\t\t\t\t\t\t\t\t\t\t\t举例\t\t\t\t\t\t\t\t\t输出</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">%</span>b\t\t无小数部分的，指数为二的幂的科学计数法，与 strconv<span class=\"token punctuation\">.</span>FormatFloat\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t的 <span class=\"token char\">'b'</span> 转换格式一致。例如 <span class=\"token operator\">-</span>123456p<span class=\"token operator\">-</span><span class=\"token number\">78</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">%</span>e\t\t科学计数法，例如 <span class=\"token operator\">-</span><span class=\"token number\">1234.456e+78</span>\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%e\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.2</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token number\">1.020000e+01</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">%</span>E\t\t科学计数法，例如 <span class=\"token operator\">-</span><span class=\"token number\">1234.456E+78</span>\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%e\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.2</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token number\">1.020000E+01</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">%</span>f\t\t有小数点而无指数，例如 <span class=\"token number\">123.456</span>\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.2</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token number\">10.200000</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">%</span>g\t\t根据情况选择 <span class=\"token operator\">%</span>e 或 <span class=\"token operator\">%</span>f 以产生更紧凑的（无末尾的<span class=\"token number\">0</span>）输出\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%g\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.20</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token number\">10.2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">%</span>G\t\t根据情况选择 <span class=\"token operator\">%</span>E 或 <span class=\"token operator\">%</span>f 以产生更紧凑的（无末尾的<span class=\"token number\">0</span>）输出\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%G\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.20</span><span class=\"token operator\">+</span><span class=\"token number\">2i</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token number\">10.2</span><span class=\"token operator\">+</span><span class=\"token number\">2i</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>字符串与字节切片</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>占位符\t\t\t\t\t\t说明\t\t\t\t\t\t\t\t\t\t\t\t举例\t\t\t\t\t\t\t\t\t输出</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">%</span>s\t\t输出字符串表示（<span class=\"token builtin\">string</span>类型或<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"多课网\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t多课网</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">%</span>q\t\t双引号围绕的字符串，由Go语法安全地转义\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%q\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"多课网\"</span><span class=\"token punctuation\">)</span>\t\t\t\t<span class=\"token string\">\"多课网\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">%</span>x\t\t十六进制，小写字母，每字节两个字符\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"golang\"</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t676f6c616e67</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">%</span>X\t\t十六进制，大写字母，每字节两个字符\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"golang\"</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t676F6C616E67</pre></td></tr></table></figure><p><strong>指针</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>占位符\t\t\t\t\t\t说明\t\t\t\t\t\t\t\t\t\t\t\t举例\t\t\t\t\t\t\t\t\t输出</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">%</span>p\t\t十六进制表示，前缀 0x\t\t\t\t\t\t\t\t\t\t\t<span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>site<span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t<span class=\"token number\">0x4f57f0</span></pre></td></tr></table></figure><h2 id=\"实例-2\"><a class=\"markdownIt-Anchor\" href=\"#实例-2\">#</a> 实例</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> user <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tu <span class=\"token operator\">:=</span> user<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"guo\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//Printf 格式化输出</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"% + v\\n\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 格式化输出结构</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#v\\n\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 输出值的 Go 语言表示方法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T\\n\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 输出值的类型的 Go 语言表示</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%t\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 输出值的 true 或 false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%b\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 二进制表示</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11111111</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 数值对应的 Unicode 编码字符</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 十进制表示</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%o\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 八进制表示</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%q\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 转化为十六进制并附上单引号</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1223</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 十六进制表示，用 a-f 表示</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1223</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 十六进制表示，用 A-F 表示</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%U\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1233</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//Unicode 表示</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%b\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.34</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 无小数部分，两位指数的科学计数法 6946802425218990p-49</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%e\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.345</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 科学计数法，e 表示</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%E\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.34455</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 科学计数法，E 表示</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.3456</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 有小数部分，无指数部分</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%g\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.3456</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 根据实际情况采用 % e 或 % f 输出</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%G\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.3456</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 根据实际情况采用 % E 或 % f 输出</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wqdew\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 直接输出字符串或者 [] byte</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%q\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dedede\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 双引号括起来的字符串</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abczxc\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 每个字节用两字节十六进制表示，a-f 表示</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%X\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdzxc\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 每个字节用两字节十六进制表示，A-F 表示</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x123</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//0x 开头的十六进制数表示</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"golang运算符\"><a class=\"markdownIt-Anchor\" href=\"#golang运算符\">#</a> golang 运算符</h1>\n<p>Go 语言内置的运算符有：</p>\n<ol>\n<li>算术运算符</li>\n<li>关系运算符</li>\n<li>逻辑运算符</li>\n<li>位运算符</li>\n<li>赋值运算符</li>\n</ol>\n<h2 id=\"算术运算符\"><a class=\"markdownIt-Anchor\" href=\"#算术运算符\">#</a> 算术运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">相加</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">相减</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">相乘</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">/</td>\n<td style=\"text-align:left\">相除</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">%</td>\n<td style=\"text-align:left\">求余</td>\n</tr>\n</tbody>\n</table>\n<p><strong>注意：</strong>  <code>++</code> （自增）和 <code>--</code> （自减）在 Go 语言中是单独的语句，并不是运算符。</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tb <span class=\"token operator\">:=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a + b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a - b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a * b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a / b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a %% b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\ta<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tb<span class=\"token operator\">--</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %v\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"关系运算符\"><a class=\"markdownIt-Anchor\" href=\"#关系运算符\">#</a> 关系运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">==</td>\n<td style=\"text-align:left\">检查两个值是否相等，如果相等返回 True 否则返回 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!=</td>\n<td style=\"text-align:left\">检查两个值是否不相等，如果不相等返回 True 否则返回 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;</td>\n<td style=\"text-align:left\">检查左边值是否大于右边值，如果是返回 True 否则返回 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;=</td>\n<td style=\"text-align:left\">检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;</td>\n<td style=\"text-align:left\">检查左边值是否小于右边值，如果是返回 True 否则返回 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;=</td>\n<td style=\"text-align:left\">检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tb <span class=\"token operator\">:=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a > b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a &lt; b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a >= b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">>=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a &lt;= b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a == b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a != b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"逻辑运算符\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算符\">#</a> 逻辑运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">&amp;&amp;</td>\n<td style=\"text-align:left\">逻辑 AND 运算符。 如果两边的操作数都是 True，则为 True，否则为 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">||</td>\n<td style=\"text-align:left\">逻辑 OR 运算符。 如果两边的操作数有一个 True，则为 True，否则为 False。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">!</td>\n<td style=\"text-align:left\">逻辑 NOT 运算符。 如果条件为 True，则为 False，否则为 True。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tb <span class=\"token operator\">:=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a &amp;&amp; b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a || b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">||</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(!a): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(!b): %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"位运算符\"><a class=\"markdownIt-Anchor\" href=\"#位运算符\">#</a> 位运算符</h2>\n<p>位运算符对整数在内存中的二进制位进行操作。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">&amp;</td>\n<td style=\"text-align:left\">参与运算的两数各对应的二进位相与。 （两位均为 1 才为 1）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">|</td>\n<td style=\"text-align:left\">参与运算的两数各对应的二进位相或。 （两位有一个为 1 就为 1）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为 1。 （两位不一样则为 1）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&lt;</td>\n<td style=\"text-align:left\">左移 n 位就是乘以 2 的 n 次方。 “a&lt;&lt;b” 是把 a 的各二进位全部左移 b 位，高位丢弃，低位补 0。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;&gt;</td>\n<td style=\"text-align:left\">右移 n 位就是除以 2 的 n 次方。 “a&gt;&gt;b” 是把 a 的各二进位全部右移 b 位。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">4</span> <span class=\"token comment\">// 二进制 100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %b\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tb <span class=\"token operator\">:=</span> <span class=\"token number\">8</span> <span class=\"token comment\">// 二进制 1000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %b\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a &amp; b): %v, %b \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a | b): %v, %b\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a ^ b): %v, %b\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a &lt;&lt; 2): %v, %b\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(b >> 2): %v, %b\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算符\">#</a> 赋值运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">=</td>\n<td style=\"text-align:left\">简单的赋值运算符，将一个表达式的值赋给一个左值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+=</td>\n<td style=\"text-align:left\">相加后再赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-=</td>\n<td style=\"text-align:left\">相减后再赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*=</td>\n<td style=\"text-align:left\">相乘后再赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">/=</td>\n<td style=\"text-align:left\">相除后再赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">%=</td>\n<td style=\"text-align:left\">求余后再赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&lt;=</td>\n<td style=\"text-align:left\">左移后赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&gt;&gt;=</td>\n<td style=\"text-align:left\">右移后赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;=</td>\n<td style=\"text-align:left\">按位与后赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">|=</td>\n<td style=\"text-align:left\">按位或后赋值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^=</td>\n<td style=\"text-align:left\">按位异或后赋值</td>\n</tr>\n</tbody>\n</table>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ta <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ta <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// a = a + 1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\ta <span class=\"token operator\">-=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// a = a -1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\ta <span class=\"token operator\">*=</span> <span class=\"token number\">2</span> <span class=\"token comment\">// a = a * 2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\ta <span class=\"token operator\">/=</span> <span class=\"token number\">2</span> <span class=\"token comment\">// a = a / 2</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"go语言中的流程控制\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的流程控制\">#</a> go 语言中的流程控制</h1>\n<h2 id=\"go语言中的条件\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的条件\">#</a> go 语言中的条件</h2>\n<p><strong>条件语句</strong>是用来判断给定的条件是否满足 (表达式值是否为 <code>true</code>  或者 <code>false</code> )，并根据判断的结果 (真或假) 决定执行的语句，go 语言中的条件语句也是这样的。</p>\n<h2 id=\"go语言中的条件语句包含如下几种情况\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的条件语句包含如下几种情况\">#</a> go 语言中的条件语句包含如下几种情况</h2>\n<ol>\n<li><strong>if 语句</strong>： <code>if</code>  语句 由一个布尔表达式后紧跟一个或多个语句组成。</li>\n<li><strong>if…else 语句</strong>:  <code>if</code>  语句 后可以使用可选的  <code>else</code>  语句， <code>else</code>  语句中的表达式在布尔表达式为  <code>false</code>  时执行。</li>\n<li><strong>if 嵌套语句</strong>：你可以在  <code>if</code>  或  <code>else if</code>  语句中嵌入一个或多个  <code>if</code>  或  <code>else if</code>  语句。</li>\n<li><strong>switch 语句</strong>:  <code>switch</code>  语句用于基于不同条件执行不同动作。</li>\n<li><strong>select 语句</strong>:  <code>select</code>  语句类似于  <code>switch</code>  语句，但是 <code>select</code>  会随机执行一个可运行的 <code>case</code> 。如果没有 <code>case</code>  可运行，它将阻塞，直到有 <code>case</code>  可运行。</li>\n</ol>\n<h2 id=\"go语言中的循环语句\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的循环语句\">#</a> go 语言中的循环语句</h2>\n<p>go 语言中的循环只有 for 循环，去除了 <code>while</code> 、 <code>do while</code>  循环，使用起来更加简洁。</p>\n<ol>\n<li>for 循环。</li>\n<li>for range 循环。</li>\n</ol>\n<h2 id=\"go语言中的流程控制关键字\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的流程控制关键字\">#</a> go 语言中的流程控制关键字</h2>\n<ol>\n<li>break</li>\n<li>continue</li>\n<li>goto</li>\n</ol>\n<h1 id=\"golang中的if语句\"><a class=\"markdownIt-Anchor\" href=\"#golang中的if语句\">#</a> golang 中的 if 语句</h1>\n<p><strong>go 语言</strong>中的<strong> if 语句</strong>和其他语言中的类似，都是根据给定的条件表达式运算结果来，判断执行流程。</p>\n<h2 id=\"go语言if语句语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言if语句语法\">#</a> go 语言 if 语句语法</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> 布尔表达式 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/* 在布尔表达式为 true 时执行 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>注意：在 go 语言中 布尔表达式不用使用括号。</p>\n</blockquote>\n<h2 id=\"go语言if语句实例演示\"><a class=\"markdownIt-Anchor\" href=\"#go语言if语句实例演示\">#</a> go 语言 if 语句实例演示</h2>\n<p><strong>根据布尔值 flag 判断</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">var</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> flag <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag is true\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序运行结束\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>程序运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flag is <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>程序运行结束</pre></td></tr></table></figure><p><strong>根据年龄判断是否成年</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你是成年人\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序运行结束\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>程序运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>你是成年人</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>程序运行结束</pre></td></tr></table></figure><blockquote>\n<p><strong>初始变量可以声明在布尔表达式里面，注意它的作用域</strong></p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">:=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你是成年人\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序运行结束\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// test1()</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// test2()</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>程序运行结果</p>\n<pre><code>你是成年人\n程序运行结束\n</code></pre>\n<blockquote>\n<p><strong>注意：不能使用 0 或非 0 表示真假</strong></p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">test4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> i <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 编译失败</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"here\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序运行结束\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>go 语言 if 语句使用提示：</strong></p>\n<ol>\n<li>不需使用括号将<strong>条件包含起来</strong></li>\n<li>大括号 <code>&#123;&#125;</code>  必须存在，即使只有一行语句</li>\n<li>左括号必须在 <code>if</code>  或 <code>else</code>  的同一行</li>\n<li>在 <code>if</code>  之后，条件语句之前，可以添加变量初始化语句，使用 <code>；</code> 进行分隔</li>\n</ol>\n<h1 id=\"golang中的if-else语句\"><a class=\"markdownIt-Anchor\" href=\"#golang中的if-else语句\">#</a> golang 中的 if else 语句</h1>\n<p>go 语言中的 if else 语句可以根据给定条件<strong>二选一</strong>。</p>\n<h2 id=\"go语言的if-else语句语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言的if-else语句语法\">#</a> go 语言的 if else 语句语法</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> 布尔表达式 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/* 在布尔表达式为 true 时执行 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">/* 在布尔表达式为 false 时执行 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go语言if-else语句实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言if-else语句实例\">#</a> go 语言 if else 语句实例</h2>\n<p><strong>比较两个数的大小</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tb <span class=\"token operator\">:=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"a>b\\\": %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a>b\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"a&lt;=b\\\": %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a&lt;b\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>判断一个数是奇数还是偶数</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入一个数字：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> s<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s 是偶数\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s 不是偶数\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s 的值是：\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>判断一个人是否成年</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你是成年人\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你还未成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>特殊写法，在 if 前面添加执行语句</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">:=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你是成年人\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你还未成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>go 语言 if 语句使用提示：</strong></p>\n<ol>\n<li>不需使用括号将条件包含起来</li>\n<li>大括号 <code>&#123;&#125;</code>  必须存在，即使只有<strong>一行语句</strong></li>\n<li><strong>左括号</strong>必须在 <code>if</code>  或 <code>else</code>  的同一行</li>\n<li>在 <code>if</code>  之后，条件语句之前，可以添加变量<strong>初始化语句</strong>，使用 <code>；</code> 进行分隔</li>\n</ol>\n<h1 id=\"golang中的if-else-if语句\"><a class=\"markdownIt-Anchor\" href=\"#golang中的if-else-if语句\">#</a> golang 中的 if else if 语句</h1>\n<p>go 语言 if 语句可以进行多重嵌套使用，进行多重判断。</p>\n<h2 id=\"go语言中的if-else-if语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的if-else-if语法\">#</a> go 语言中的 if else if 语法</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> 布尔表达式<span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// do something</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> 布尔表达式<span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// do something else</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// catch-all or default</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go语言中的if-else-if语法实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言中的if-else-if语法实例\">#</a> go 语言中的 if else if 语法实例</h2>\n<p><strong>根据分数判断等级</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tscore <span class=\"token operator\">:=</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span> <span class=\"token number\">70</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> score <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>程序运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>B</pre></td></tr></table></figure><p><strong>同样也可以写成这样</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> score <span class=\"token operator\">:=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span> <span class=\"token number\">70</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> score <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">//  Monday Tuesday Wednesday Thursday Friday Saturday Sunday</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> c <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入一个字符：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"S\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入第二个字符：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"a\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Saturday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"u\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sunday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"F\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Friday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"M\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Monday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"T\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入第二个字符：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"u\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tuesday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"h\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thursday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">\"W\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wednesday\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"golang中嵌套if语句\"><a class=\"markdownIt-Anchor\" href=\"#golang中嵌套if语句\">#</a> golang 中嵌套 if 语句</h1>\n<p>go 语言 if 语句可以嵌套多级进行判断。</p>\n<h2 id=\"go语言if嵌套语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言if嵌套语法\">#</a> go 语言 if 嵌套语法</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> 布尔表达式 <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/* 在布尔表达式 1 为 true 时执行 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">if</span> 布尔表达式 <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">/* 在布尔表达式 2 为 true 时执行 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go语言if嵌套实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言if嵌套实例\">#</a> go 语言 if 嵌套实例</h2>\n<p><strong>判断三个数的大小</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// a>b a>c a</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// b>a b>c b else c</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tb <span class=\"token operator\">:=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tc <span class=\"token operator\">:=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> c <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a最大\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> b <span class=\"token operator\">></span> c <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b最大\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c最大\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>判断男生还是女生，还有是否成年</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 判断男女生及年龄</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tgender <span class=\"token operator\">:=</span> <span class=\"token string\">\"女生\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tage <span class=\"token operator\">:=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> gender <span class=\"token operator\">==</span> <span class=\"token string\">\"男生\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"男生\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"女生\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未成年\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"golang-switch语句\"><a class=\"markdownIt-Anchor\" href=\"#golang-switch语句\">#</a> golang switch 语句</h1>\n<p>go 语言中的 <code>switch</code>  语句，可以非常容易的判断多个值的情况。</p>\n<h2 id=\"go语言中switch语句的语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言中switch语句的语法\">#</a> go 语言中 switch 语句的语法</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> var1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">case</span> val1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">case</span> val2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go语言中switch语句实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言中switch语句实例\">#</a> go 语言中 <code>switch</code>  语句实例</h2>\n<p><strong>判断成绩</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tgrade <span class=\"token operator\">:=</span> <span class=\"token string\">\"A\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> grade <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"优秀\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"良好\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一般\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>优秀\n</code></pre>\n<p><strong>多条件匹配</strong></p>\n<p>go 语言 <code>switch</code>  语句，可以同时匹配多个条件，中间用逗号分隔，有其中一个匹配成功即可。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tday <span class=\"token operator\">:=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> day <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"工作日\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"休息日\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>工作日\n</code></pre>\n<p><strong>case 可以是条件表达式</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tscore <span class=\"token operator\">:=</span> <span class=\"token number\">90</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">case</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"享受假期\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">case</span> score <span class=\"token operator\">&lt;</span> <span class=\"token number\">90</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"好好学习吧！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"玩命学习！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>享受假期\n</code></pre>\n<p><strong> <code>fallthrough</code>  可以可以执行满足条件的下一个 <code>case</code> </strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> a <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"100\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">fallthrough</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"200\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">300</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"300\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"other\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">200</span></pre></td></tr></table></figure><h2 id=\"go语言中switch语句的注意事项\"><a class=\"markdownIt-Anchor\" href=\"#go语言中switch语句的注意事项\">#</a> go 语言中 <code>switch</code>  语句的注意事项</h2>\n<ol>\n<li>支持多条件匹配</li>\n<li>不同的  <code>case</code>  之间不使用  <code>break</code>  分隔，默认只会执行一个  <code>case</code> 。</li>\n<li>如果想要执行多个  <code>case</code> ，需要使用  <code>fallthrough</code>  关键字，也可用  <code>break</code>  终止。</li>\n<li>分支还可以使用<strong>表达式</strong>，例如： <code>a&gt;10</code> .</li>\n</ol>\n<h1 id=\"golang-for循环语句\"><a class=\"markdownIt-Anchor\" href=\"#golang-for循环语句\">#</a> golang for 循环语句</h1>\n<p>go 语言中的 <code>for</code>  循环，只有 <code>for</code>  关键字，去除了像其他语言中的 <code>while</code>  和 <code>do while</code> .</p>\n<h2 id=\"go语言for循环语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言for循环语法\">#</a> go 语言 for 循环语法</h2>\n<pre><code>for 初始语句;条件表达式;结束语句&#123;\n    循环体语句\n&#125;\n</code></pre>\n<blockquote>\n<p>注意：for 表达式不用加括号</p>\n</blockquote>\n<h2 id=\"go语言for循环实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言for循环实例\">#</a> go 语言 for 循环实例</h2>\n<p><strong>循环输出 1 到 10</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><p><strong>初始条件，可以写到外面</strong></p>\n<pre><code>func f() &#123;\n\ti := 1\n\tfor ; i &lt;= 10; i++ &#123;\n\t\tfmt.Printf(&quot;i: %v\\n&quot;, i)\n\t&#125;\n&#125;\n</code></pre>\n<p>运行结果</p>\n<pre><code>i: 1\ni: 2\ni: 3\ni: 4\ni: 5\ni: 6\ni: 7\ni: 8\ni: 9\ni: 10\n</code></pre>\n<p><strong>初始条件和结束条件都可以省略</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ti <span class=\"token operator\">:=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 初始条件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\ti<span class=\"token operator\">++</span> <span class=\"token comment\">// 结束条件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>i: 1\ni: 2\ni: 3\ni: 4\ni: 5\ni: 6\ni: 7\ni: 8\ni: 9\ni: 10\n</code></pre>\n<p>这种情况类似其他语言中的 <code>while</code>  循环</p>\n<p><strong>永真循环</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我一直在执行~\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n我一直在执行~\n......\n</code></pre>\n<p>for 循环可以通过 <code>break</code> 、 <code>goto</code> 、 <code>return</code> 、 <code>panic</code>  语句强制退出循环。</p>\n<h1 id=\"golang-for-range循环\"><a class=\"markdownIt-Anchor\" href=\"#golang-for-range循环\">#</a> golang for range 循环</h1>\n<p>Go 语言中可以使用 <code>for range</code>  遍历数组、切片、字符串、map 及通道（channel）。 通过 <code>for range</code>  遍历的返回值有以下规律：</p>\n<ol>\n<li>数组、切片、字符串返回<strong>索引和值</strong>。</li>\n<li>map 返回键和值。</li>\n<li>通道（channel）只返回通道内的值。</li>\n</ol>\n<h2 id=\"go语言for-range实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言for-range实例\">#</a> go 语言 for range 实例</h2>\n<p><strong>循环数组</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> a <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %d, v: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr></table></figure><p><strong>循环字符串</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"多课网，go教程\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %d, v: %c\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// % c 按照字符输出</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> 多</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> 课</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> 网</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> ，</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> g</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> o</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> 教</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> 程</pre></td></tr></table></figure><p><strong>循环切片</strong></p>\n<pre><code>func f() &#123;\n\tvar s = []int&#123;1, 2, 3, 4, 5&#125;\n\tfor i, v := range s &#123;\n\t\tfmt.Printf(&quot;i, %d, v: %v\\n&quot;, i, v)\n\t&#125;\n&#125;\n\nfunc main() &#123;\n\tf()\n&#125;\n</code></pre>\n<p><strong>循环 map</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tm <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tm<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tm<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tm<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> m <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"k: %v, v: %v\\n\"</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>k<span class=\"token punctuation\">:</span> email<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> tom@gmail<span class=\"token punctuation\">.</span>com</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>k<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> tom</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>k<span class=\"token punctuation\">:</span> age<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr></table></figure><h1 id=\"golang流程控制关键字break\"><a class=\"markdownIt-Anchor\" href=\"#golang流程控制关键字break\">#</a> golang 流程控制关键字 break</h1>\n<p><code>break</code>  语句可以结束 <code>for</code> 、 <code>switch</code>  和 <code>select</code>  的代码块。</p>\n<h2 id=\"go语言使用break注意事项\"><a class=\"markdownIt-Anchor\" href=\"#go语言使用break注意事项\">#</a> go 语言使用 break 注意事项</h2>\n<ol>\n<li>单独在 <code>select</code>  中使用 <code>break</code>  和不使用 <code>break</code>  没有啥区别。</li>\n<li>单独在表达式 <code>switch</code>  语句，并且没有 <code>fallthough</code> ，使用 <code>break</code>  和不使用 <code>break</code>  没有啥区别。</li>\n<li>单独在表达式 <code>switch</code>  语句，并且有 <code>fallthough</code> ，使用 <code>break</code>  能够终止 <code>fallthough</code>  后面的 <code>case</code>  语句的执行。</li>\n<li>带标签的 <code>break</code> ，可以跳出多层 <code>select/ switch</code>  作用域。让 <code>break</code>  更加灵活，写法更加简单灵活，不需要使用控制变量一层一层跳出循环，没有带 <code>break</code>  的只能跳出当前语句块。</li>\n</ol>\n<h2 id=\"go语言break关键字实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言break关键字实例\">#</a> go 语言 break 关键字实例</h2>\n<p><strong>跳出 for 循环</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span> <span class=\"token comment\">// 退出循环</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span></pre></td></tr></table></figure><p><strong>跳出 switch</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ti <span class=\"token operator\">:=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">switch</span> i <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等于1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等于2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">fallthrough</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"等于3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不关心\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>等于2\n</code></pre>\n<p>注释掉 <code>fallthrough</code>  上面的 <code>break</code> ，运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>等于<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>等于<span class=\"token number\">3</span></pre></td></tr></table></figure><p><strong>跳转到标签处</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>MY_LABEL<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span> MY_LABEL</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end...\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>0\n1\n2\n3\n4\nend...\n</code></pre>\n<h1 id=\"golang关键字continue\"><a class=\"markdownIt-Anchor\" href=\"#golang关键字continue\">#</a> golang 关键字 continue</h1>\n<p><code>continue</code>  只能用在循环中，在 go 中只能用在 <code>for</code>  循环中，它可以终止本次循环，进行下一次循环。</p>\n<p>在  <code>continue</code>  语句后添加标签时，表示开始标签对应的循环。</p>\n<h2 id=\"go语言continue实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言continue实例\">#</a> go 语言 <code>continue</code>  实例</h2>\n<p><strong>输出 1 到 10 之间的偶数</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>i: 0\ni: 2\ni: 4\ni: 6\ni: 8\n</code></pre>\n<p><strong>跳转到 label</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// MY_LABEL:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tMY_LABEL<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">continue</span> MY_LABEL</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=%d,j=%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">4</span></pre></td></tr></table></figure><h1 id=\"golang流程控制关键字goto\"><a class=\"markdownIt-Anchor\" href=\"#golang流程控制关键字goto\">#</a> golang 流程控制关键字 goto</h1>\n<p><code>goto</code>  语句通过标签进行代码间的<strong>无条件跳转</strong>。 <code>goto</code>  语句可以在快速跳出循环、避免重复退出上有一定的帮助。Go 语言中使用 <code>goto</code>  语句能简化一些代码的实现过程。 例如双层嵌套的 for 循环要退出时：</p>\n<h2 id=\"go语言关键字goto实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言关键字goto实例\">#</a> go 语言关键字 goto 实例</h2>\n<p><strong>跳转到指定标签</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">goto</span> LABEL1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"other\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>LABEL1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"next...\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>next...\n</code></pre>\n<p><strong>跳出双重循环</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">goto</span> LABEL1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>LABEL1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"label1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>label1\n</code></pre>\n<h1 id=\"golang数组\"><a class=\"markdownIt-Anchor\" href=\"#golang数组\">#</a> golang 数组</h1>\n<p>数组是<strong>相同数据类型</strong>的一组数据的集合，数组一旦定义<strong>长度不能修改</strong>，数组可以通过 ** 下标（或者叫索引）** 来访问元素。</p>\n<h2 id=\"go语言数组的定义\"><a class=\"markdownIt-Anchor\" href=\"#go语言数组的定义\">#</a> go 语言数组的定义</h2>\n<p>数组定义的语法如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> variable_name <span class=\"token punctuation\">[</span>SIZE<span class=\"token punctuation\">]</span> variable_type</pre></td></tr></table></figure><p><code>variable_name</code> ：数组名称</p>\n<p><code>SIZE</code> ：数组长度，必须是常量</p>\n<p><code>variable_type</code> ：数组保存元素的类型</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span>    <span class=\"token comment\">// 定义一个 int 类型的数组 a，长度是 3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span> <span class=\"token comment\">// 定义一个字符串类型的数组 s，长度是 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %T\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %T\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: [3]int\ns: [2]string\n</code></pre>\n<p>从上面运行结果，我们可以看出，数组和长度和元素类型共同组成了数组的类型。</p>\n<h2 id=\"go语言数组的初始化\"><a class=\"markdownIt-Anchor\" href=\"#go语言数组的初始化\">#</a> go 语言数组的初始化</h2>\n<p>初始化，就是给数组的元素赋值，没有初始化的数组，默认元素值都是<strong>零值</strong>，布尔类型是 <code>false</code> ，字符串是空字符串。</p>\n<h3 id=\"没有初始化的数组\"><a class=\"markdownIt-Anchor\" href=\"#没有初始化的数组\">#</a> 没有初始化的数组</h3>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span>    <span class=\"token comment\">// 定义一个 int 类型的数组 a，长度是 3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span> <span class=\"token comment\">// 定义一个字符串类型的数组 s，长度是 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %v\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: [0 0 0]\ns: [&quot;&quot; &quot;&quot;]\nb: [false false]\n</code></pre>\n<h3 id=\"使用初始化列表\"><a class=\"markdownIt-Anchor\" href=\"#使用初始化列表\">#</a> 使用初始化列表</h3>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">&#123;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ta1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 类型推断</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %v\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1: %v\\n\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: [1 2 3]\ns: [tom kite]\nb: [true false]\na1: [1 2]\n</code></pre>\n<p>使用初始化列表，就是将值写在<strong>大括号</strong>里面。</p>\n<h3 id=\"省略数组长度\"><a class=\"markdownIt-Anchor\" href=\"#省略数组长度\">#</a> 省略数组长度</h3>\n<p>数组长度可以省略，使用 <code>...</code>  代替，更加初始化值得数量<strong>自动推断</strong>，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">&#123;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ta1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 类型推断</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %v\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1: %v\\n\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: [1 2 3]\ns: [tom kite]\nb: [true false]\na1: [1 2]\n</code></pre>\n<h3 id=\"指定索引值的方式来初始化\"><a class=\"markdownIt-Anchor\" href=\"#指定索引值的方式来初始化\">#</a> 指定索引值的方式来初始化</h3>\n<p>可以通过指定所有的方式来初始化，未指定所有的默认未零值。</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ta1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 类型推断</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %v\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1: %v\\n\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: [1 0 2]\ns: [ tom kite]\nb: [false false true false false false]\na1: [1 2]\n</code></pre>\n<h1 id=\"go语言访问数组元素\"><a class=\"markdownIt-Anchor\" href=\"#go语言访问数组元素\">#</a> go 语言访问数组元素</h1>\n<p>可以通过下标的方式，来访问数组元素。数组的最大下标为数组长度 - 1，大于这个下标会发生数组越界。</p>\n<h2 id=\"访问数组元素\"><a class=\"markdownIt-Anchor\" href=\"#访问数组元素\">#</a> 访问数组元素</h2>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ta<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 修改 a [0]  a [1]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\ta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\ta<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a[0]: 100\na[0]: 200\n-----------\na[0]: 1\na[0]: 2\n</code></pre>\n<h2 id=\"根据数组长度遍历数组\"><a class=\"markdownIt-Anchor\" href=\"#根据数组长度遍历数组\">#</a> 根据数组长度遍历数组</h2>\n<p>可以根据数组长度，通过 <code>for</code>  循环的方式来遍历数组，数组的长度可以使用 <code>len</code>  函数获得。</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[%d]: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a[0]: 1\na[1]: 2\na[2]: 3\na[3]: 4\na[4]: 5\na[5]: 6\n</code></pre>\n<h2 id=\"使用for-range数组\"><a class=\"markdownIt-Anchor\" href=\"#使用for-range数组\">#</a> 使用 <code>for range</code>  数组</h2>\n<p>还可以使用 <code>for range</code>  循环来遍历数组，range 返回数组下标和对应的值</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> a <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[%d]: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6</span></pre></td></tr></table></figure><h1 id=\"golang切片\"><a class=\"markdownIt-Anchor\" href=\"#golang切片\">#</a> golang 切片</h1>\n<p>前面我们学习了数组，数组是固定长度，可以容纳相同数据类型的元素的集合。当长度固定时，使用还是带来一些限制，比如：我们申请的长度太大浪费内存，太小又不够用。</p>\n<p>鉴于上述原因，我们有了 go 语言的切片，可以把切片理解为，可变长度的数组，其实它底层就是使用数组实现的，增加了<strong>自动扩容</strong>功能。切片（Slice）是一个拥有相同类型元素的可变长度的序列。</p>\n<h2 id=\"go语言切片的语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言切片的语法\">#</a> go 语言切片的语法</h2>\n<p>声明一个切片和声明一个数组类似，只要不添加长度就可以了</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> identifier <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span></pre></td></tr></table></figure><p>切片是引用类型，可以使用 <code>make</code>  函数来创建切片：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> slice1 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>也可以简写为</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>slice1 <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>也可以指定容量，其中 capacity 为可选参数。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>T<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> capacity<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里 len 是数组的长度并且也是切片的初始长度。</p>\n<h2 id=\"go语言切片实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言切片实例\">#</a> go 语言切片实例</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> names <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> numbers <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"names: %v\\n\"</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers: %v\\n\"</span><span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>names <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>numbers <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>names: []\nnumbers: []\ntrue\ntrue\n</code></pre>\n<h2 id=\"go语言切片的长度和容量\"><a class=\"markdownIt-Anchor\" href=\"#go语言切片的长度和容量\">#</a> go 语言切片的长度和容量</h2>\n<p>切片拥有自己的长度和容量，我们可以通过使用内置的 <code>len()</code>  函数求长度，使用内置的 <code>cap()</code>  函数求切片的容量。</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"len: %d cap: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"len: %d cap: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">var</span> s1 <span class=\"token operator\">=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"len: %d cap: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>len: 2 cap: 2\nlen: 3 cap: 3\nlen: 2 cap: 3\n</code></pre>\n<h1 id=\"golang切片的初始化\"><a class=\"markdownIt-Anchor\" href=\"#golang切片的初始化\">#</a> golang 切片的初始化</h1>\n<p>切片的初始化方法很多，可以直接初始化，也可以使用数组初始化等。</p>\n<h2 id=\"切片如何切分\"><a class=\"markdownIt-Anchor\" href=\"#切片如何切分\">#</a> 切片如何切分</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 切片</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">var</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\ts2 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// [)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s2: %v\\n\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts3 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s3: %v\\n\"</span><span class=\"token punctuation\">,</span> s3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ts4 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s4: %v\\n\"</span><span class=\"token punctuation\">,</span> s4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ts5 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s5: %v\\n\"</span><span class=\"token punctuation\">,</span> s5<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"直接初始化\"><a class=\"markdownIt-Anchor\" href=\"#直接初始化\">#</a> 直接初始化</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s: [1 2 3]\n</code></pre>\n<h2 id=\"使用数组初始化\"><a class=\"markdownIt-Anchor\" href=\"#使用数组初始化\">#</a> 使用数组初始化</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tarr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1: %v\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1: [1 2 3]\n</code></pre>\n<h2 id=\"使用数组的部分元素初始化切片表达式\"><a class=\"markdownIt-Anchor\" href=\"#使用数组的部分元素初始化切片表达式\">#</a> 使用数组的部分元素初始化（切片表达式）</h2>\n<p>切片的底层就是一个<strong>数组</strong>，所以我们可以<strong>基于数组通过切片表达式得到切片</strong>。 切片表达式中的 low 和 high 表示一个索引范围（<strong>左包含，右不包含</strong>），得到的切片<strong>长度</strong> = high-low，容量等于得到的切片的底层数组的容量。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tarr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1: %v\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ts2 <span class=\"token operator\">:=</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s2: %v\\n\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\ts3 <span class=\"token operator\">:=</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s3: %v\\n\"</span><span class=\"token punctuation\">,</span> s3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1: [3 4 5]\ns2: [3 4 5 6]\ns3: [1 2 3]\n</code></pre>\n<h2 id=\"空nil切片\"><a class=\"markdownIt-Anchor\" href=\"#空nil切片\">#</a> 空 (nil) 切片</h2>\n<p>一个切片在未初始化之前默认为 nil，长度为 0，容量为 0.</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> s1 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"len: %d, cap: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>true\nlen: 0, cap: 0\n</code></pre>\n<h1 id=\"go语言切片的遍历\"><a class=\"markdownIt-Anchor\" href=\"#go语言切片的遍历\">#</a> go 语言切片的遍历</h1>\n<p>切片的遍历和数组的遍历非常类似，可以使用 for 循环索引遍历，或者 for range 循环。</p>\n<h2 id=\"for循环索引遍历\"><a class=\"markdownIt-Anchor\" href=\"#for循环索引遍历\">#</a> for 循环索引遍历</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1[%d]: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1[0]: 1\ns1[1]: 2\ns1[2]: 3\ns1[3]: 4\ns1[4]: 5\n</code></pre>\n<h2 id=\"for-range循环\"><a class=\"markdownIt-Anchor\" href=\"#for-range循环\">#</a> for range 循环</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> s1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1[%d]: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1[0]: 1\ns1[1]: 2\ns1[2]: 3\ns1[3]: 4\ns1[4]: 5\n</code></pre>\n<h1 id=\"go语言切片元素的添加和删除copy\"><a class=\"markdownIt-Anchor\" href=\"#go语言切片元素的添加和删除copy\">#</a> go 语言切片元素的添加和删除 copy</h1>\n<p>切片是一个动态数组，可以使用 <code>append()</code>  函数添加元素，go 语言中并没有删除切片元素的专用方法，我们可以使用切片本身的特性来删除元素。由于，切片是引用类型，通过赋值的方式，会修改原有内容，go 提供了 <code>copy()</code>  函数来拷贝切片</p>\n<p>db CRUD</p>\n<h2 id=\"添加元素\"><a class=\"markdownIt-Anchor\" href=\"#添加元素\">#</a> 添加元素</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ts1 <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ts1 <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ts1 <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加多个元素</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1: %v\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\ts3 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\ts4 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\ts4 <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s4<span class=\"token punctuation\">,</span> s3<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加另外一个切片</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s4: %v\\n\"</span><span class=\"token punctuation\">,</span> s4<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1: [1 2 3 4 5]\ns4: [1 2 3 4 5]\n</code></pre>\n<h2 id=\"删除元素\"><a class=\"markdownIt-Anchor\" href=\"#删除元素\">#</a> 删除元素</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 删除索引为 2 的元素</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ts1 <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1: %v\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1: [1 2 4 5]\n</code></pre>\n<p>公式：要从切片 a 中删除索引为 <code>index</code>  的元素，操作方法是 <code>a = append(a[:index], a[index+1:]...)</code></p>\n<h2 id=\"拷贝切片\"><a class=\"markdownIt-Anchor\" href=\"#拷贝切片\">#</a> 拷贝切片</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ts1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ts2 <span class=\"token operator\">:=</span> s1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ts1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1: %v\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s2: %v\\n\"</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\ts3 <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>s3<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\ts1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1: %v\\n\"</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s3: %v\\n\"</span><span class=\"token punctuation\">,</span> s3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s1: [100 2 3]\ns2: [100 2 3]\n-------------\ns1: [1 2 3]\ns3: [100 2 3]\n</code></pre>\n<p>从运行结果，我们看到赋值的情况下，原来的变量被修改了，使用 copy 函数，原来的变量没有被修改。</p>\n<h1 id=\"golang-map\"><a class=\"markdownIt-Anchor\" href=\"#golang-map\">#</a> golang map</h1>\n<p>map 是一种 <code>key:value</code>  键值对的数据结构容器。map 内部实现是哈希表 ( <code>hash</code> )。</p>\n<p>map 最重要的一点是通过 key 来快速检索数据，key 类似于索引，指向数据的值。</p>\n<p>map 是引用类型的。</p>\n<h2 id=\"map的语法格式\"><a class=\"markdownIt-Anchor\" href=\"#map的语法格式\">#</a> map 的语法格式</h2>\n<p>可以使用内建函数 make 也可以使用 map 关键字来定义 map</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 声明变量，默认 map 是 nil */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> map_variable <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>key_data_type<span class=\"token punctuation\">]</span>value_data_type</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/* 使用 make 函数 */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>map_variable <span class=\"token operator\">=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>key_data_type<span class=\"token punctuation\">]</span>value_data_type<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>map_variable</code> ：map 变量名称</p>\n<p><code>key_data_type</code> ：key 的数据类型</p>\n<p><code>value_data_type</code> ：值得数据类型</p>\n<p><strong>实例</strong></p>\n<p>下面声明一个保存个人信息的 map</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tm1 <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m1: %v\\n\"</span><span class=\"token punctuation\">,</span> m1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tm2 <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>  <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span>   <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token string\">\"email\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"kite@gmail.com\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m2: %v\\n\"</span><span class=\"token punctuation\">,</span> m2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>m1: map[age:20 email:tom@gmail.com name:tom]\nm2: map[age:20 email:kite@gmail.com name:kite]\n</code></pre>\n<h2 id=\"访问map\"><a class=\"markdownIt-Anchor\" href=\"#访问map\">#</a> 访问 map</h2>\n<p>可以通过下标 key 获得其值，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tm1 <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tname <span class=\"token operator\">:=</span> m1<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tage <span class=\"token operator\">:=</span> m1<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\temail <span class=\"token operator\">:=</span> m1<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age: %v\\n\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email: %v\\n\"</span><span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"判断某个键是否存在\"><a class=\"markdownIt-Anchor\" href=\"#判断某个键是否存在\">#</a> 判断某个键是否存在</h2>\n<p>go 语言中有个判断 map 中键是否存在的特殊写法，格式如下:</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>value<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>如果 ok 为 <code>true</code> ，存在；否则，不存在。</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tm1 <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tm1<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tv<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> m1<span class=\"token punctuation\">[</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> ok <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键存在\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键不存在\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>键不存在</pre></td></tr></table></figure><h1 id=\"go语言遍历map\"><a class=\"markdownIt-Anchor\" href=\"#go语言遍历map\">#</a> go 语言遍历 map</h1>\n<p>可以使用 <code>for range</code>  循环进行 map 遍历，得到 key 和 value 值。</p>\n<h2 id=\"遍历key\"><a class=\"markdownIt-Anchor\" href=\"#遍历key\">#</a> 遍历 key</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t m <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t m<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t m<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t m<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t <span class=\"token keyword\">for</span> key <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> m<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>name\nage\nemail\n</code></pre>\n<h2 id=\"遍历key和value\"><a class=\"markdownIt-Anchor\" href=\"#遍历key和value\">#</a> 遍历 key 和 value</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t m <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t m<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t m<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t m<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> m<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">+</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>name:tom\nage:20\nemail:tom@gmail.com\n</code></pre>\n<h1 id=\"golang-函数\"><a class=\"markdownIt-Anchor\" href=\"#golang-函数\">#</a> golang 函数</h1>\n<h2 id=\"golang函数简介\"><a class=\"markdownIt-Anchor\" href=\"#golang函数简介\">#</a> golang 函数简介</h2>\n<p>函数的 go 语言中的<strong>一级公民</strong>，我们把所有的功能单元都定义在函数中，可以重复使用。函数包含函数的名称、参数列表和返回值类型，这些构成了函数的签名（signature）。</p>\n<h3 id=\"go语言中函数特性\"><a class=\"markdownIt-Anchor\" href=\"#go语言中函数特性\">#</a> go 语言中函数特性</h3>\n<ol>\n<li>go 语言中有 3 种函数：普通函数、匿名函数 (没有名称的函数)、方法 (定义在 struct 上的函数)。receiver</li>\n<li>go 语言中不允许函数重载 (overload)，也就是说不允许函数同名。</li>\n<li>go 语言中的函数不能嵌套函数，但可以嵌套匿名函数。</li>\n<li>函数是一个值，可以将函数赋值给变量，使得这个变量也成为函数。</li>\n<li>函数可以作为参数传递给另一个函数。</li>\n<li>函数的返回值可以是一个函数。</li>\n<li>函数调用的时候，如果有参数传递给函数，则先拷贝参数的副本，再将副本传递给函数。</li>\n<li>函数参数可以没有名称。</li>\n</ol>\n<h2 id=\"go语言中函数的定义和调用\"><a class=\"markdownIt-Anchor\" href=\"#go语言中函数的定义和调用\">#</a> go 语言中函数的定义和调用</h2>\n<p>函数在使用之前必须先定义，可以调用函数来完成某个任务。函数可以重复调用，从而达到代码重用。</p>\n<h3 id=\"go语言函数定义语法\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数定义语法\">#</a> go 语言函数定义语法</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">function_name</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span>parameter list<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>return_types<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   函数体</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>语法解析：</strong></p>\n<ul>\n<li><code>func</code> ：函数由  <code>func</code>  开始声明</li>\n<li><code>function_name</code> ：函数名称，函数名和参数列表一起构成了函数签名。</li>\n<li><code>[parameter list]</code> ：参数列表，参数就像一个占位符，当函数被调用时，你可以将值传递给参数，这个值被称为实际参数。参数列表指定的是参数类型、顺序、及参数个数。参数是可选的，也就是说函数也可以不包含参数。</li>\n<li><code>return_types</code> ：返回类型，函数返回一列值。 <code>return_types</code>  是该列值的数据类型。有些功能不需要返回值，这种情况下  <code>return_types</code>  不是必须的。</li>\n<li>函数体：函数定义的代码集合。</li>\n</ul>\n<h3 id=\"go语言函数定义实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数定义实例\">#</a> go 语言函数定义实例</h3>\n<p><strong>定义一个求和函数</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ret <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tret <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> ret</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>定义一个比较两个数大小的函数</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>max <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tmax <span class=\"token operator\">=</span> a</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tmax <span class=\"token operator\">=</span> b</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> max</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"go语言函数调用\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数调用\">#</a> go 语言函数调用</h3>\n<p>当我们要完成某个任务时，可以调用函数来完成。调用函数要传递参数，如何有返回值可以获得返回值。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ts <span class=\"token operator\">:=</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tmax <span class=\"token operator\">:=</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max: %v\\n\"</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>max<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><h1 id=\"golang函数的返回值\"><a class=\"markdownIt-Anchor\" href=\"#golang函数的返回值\">#</a> golang 函数的返回值</h1>\n<p>函数可以有 0 或多个返回值，返回值需要指定数据类型，返回值通过 <code>return</code>  关键字来指定。</p>\n<p><code>return</code>  可以有参数，也可以没有参数，这些返回值可以有名称，也可以没有名称。go 中的函数可以有多个返回值。</p>\n<ol>\n<li><code>return</code>  关键字中指定了参数时，返回值可以不用名称。如果 <code>return</code>  省略参数，则返回值部分必须带名称</li>\n<li>当返回值有名称时，必须使用括号包围，逗号分隔，即使只有一个返回值</li>\n<li>但即使返回值命名了， <code>return</code>  中也可以强制指定其它返回值的名称，也就是说 <code>return</code>  的优先级更高</li>\n<li>命名的返回值是预先声明好的，在函数内部可以直接使用，无需再次声明。命名返回值的名称不能和函数参数名称相同，否则报错提示变量重复定义</li>\n<li><code>return</code>  中可以有表达式，但不能出现赋值表达式，这和其它语言可能有所不同。例如 <code>return a+b</code>  是正确的，但 <code>return c=a+b</code>  是错误的。</li>\n</ol>\n<h2 id=\"go语言函数返回值实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数返回值实例\">#</a> go 语言函数返回值实例</h2>\n<p><strong>没有返回值</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我没有返回值，只是进行一些计算\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>有一个返回值</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ret <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tret <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> ret</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>多个返回值，且在 return 中指定返回的内容</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tname <span class=\"token operator\">=</span> <span class=\"token string\">\"老郭\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tage <span class=\"token operator\">=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> name<span class=\"token punctuation\">,</span> age</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>多个返回值，返回值名称没有被使用</strong></p>\n<pre><code>func f3() (name string, age int) &#123;\n\tname = &quot;老郭&quot;\n\tage = 30\n\treturn // 等价于return name, age\n&#125;\n</code></pre>\n<p><strong>return 覆盖命名返回值，返回值名称没有被使用</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tn <span class=\"token operator\">:=</span> <span class=\"token string\">\"老郭\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> n<span class=\"token punctuation\">,</span> a</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>Go 中经常会使用其中一个返回值作为函数是否执行成功、是否有错误信息的判断条件。例如 <code>return value,exists</code> 、 <code>return value,ok</code> 、 <code>return value,err</code>  等。</p>\n</blockquote>\n<blockquote>\n<p>当函数的<strong>返回值过多</strong>时，例如有 4 个以上的返回值，应该将这些返回值收集到容器中，然后以返回容器的方式去返回。例如，同类型的返回值可以放进 slice 中，不同类型的返回值可以放进 map 中。</p>\n</blockquote>\n<blockquote>\n<p>但函数有多个返回值时，如果其中某个或某几个返回值不想使用，可以通过下划线 <code>_</code> 来丢弃这些返回值。例如下面的 <code>f1</code>  函数两个返回值，调用该函数时，丢弃了第二个返回值 b，只保留了第一个返回值 a 赋值给了变量 <code>a</code> 。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">:=</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x: %v\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>x: 2\n</code></pre>\n<h1 id=\"golang函数的参数\"><a class=\"markdownIt-Anchor\" href=\"#golang函数的参数\">#</a> golang 函数的参数</h1>\n<p>go 语言函数可以有 0 或多个参数，参数需要指定<strong>数据类型</strong>。</p>\n<p>声明函数时的参数列表叫做形参，调用时传递的参数叫做实参。</p>\n<p>go 语言是通过<strong>传值的方式传参</strong>的，意味着传递给函数的是拷贝后的副本，所以函数内部访问、修改的也是这个副本。</p>\n<p>go 语言可以使用<strong>变长参数</strong>，有时候并不能确定参数的个数，可以使用变长参数，可以在函数定义语句的参数部分使用 <code>ARGS...TYPE</code>  的方式。这时会将 <code>...</code>  代表的参数全部保存到一个名为 ARGS 的 slice 中，注意这些参数的数据类型都是 TYPE。</p>\n<h2 id=\"go语言函数的参数实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数的参数实例\">#</a> go 语言函数的参数实例</h2>\n<p><strong>go 语言传参</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 形参列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 实参列表</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r: %v\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>演示参数传递，按值传递</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ta <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a1: 200\na: 100\n</code></pre>\n<p>从运行结果可以看到，调用函数 f1 后，a 的值并没有被改变，说明参数传递是拷贝了一个副本，也就是拷贝了一份新的内容进行运算。</p>\n<blockquote>\n<p><code>map</code> 、 <code>slice</code> 、 <code>interface</code> 、 <code>channel</code>  这些数据类型本身就是<strong>指针</strong>类型的，所以就算是拷贝传值也是拷贝的指针，拷贝后的参数仍然指向底层数据结构，所以修改它们<strong>可能</strong>会影响外部数据结构的值。</p>\n</blockquote>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %v\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a: [1 2]\na: [100 2]\n</code></pre>\n<blockquote>\n<p>从运行结果发现，调用函数后，slice 内容被改变了。</p>\n</blockquote>\n<p><strong>变长参数</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>args <span class=\"token operator\">...</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> args <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v: %v\\n\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> args <span class=\"token operator\">...</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age: %v\\n\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> args <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v: %v\\n\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>v: 1\nv: 2\nv: 3\n------------\nv: 1\nv: 2\nv: 3\nv: 4\nv: 5\nv: 6\n------------\nname: tom\nage: 20\nv: 1\nv: 2\nv: 3\n</code></pre>\n<h1 id=\"golang函数类型与函数变量\"><a class=\"markdownIt-Anchor\" href=\"#golang函数类型与函数变量\">#</a> golang 函数类型与函数变量</h1>\n<p>可以使用 <code>type</code>  关键字来定义一个函数类型，语法格式如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> fun <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span></pre></td></tr></table></figure><p>上面语句定义了一个 <code>fun</code>  函数类型，它是一种函数类型，这种函数接收两个 <code>int</code>  类型的参数，并且返回一个 <code>int</code>  类型的返回值。</p>\n<p>下面我们定义两个这样结构的两个函数，一个求和，一个比较大小：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>下面定义一个 <code>fun</code>  函数类型，把 <code>sum</code>  和 <code>max</code>  赋值给它</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">type</span> fun <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">var</span> f fun</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tf <span class=\"token operator\">=</span> sum</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\ts <span class=\"token operator\">:=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s: %v\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tf <span class=\"token operator\">=</span> max</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tm <span class=\"token operator\">:=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m: %v\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>s: 3\nm: 4\n</code></pre>\n<h1 id=\"golang高阶函数\"><a class=\"markdownIt-Anchor\" href=\"#golang高阶函数\">#</a> golang 高阶函数</h1>\n<p>go 语言的函数，可以作为函数的参数，传递给另外一个函数，可以可以作为，另外一个函数的返回值返回。</p>\n<h2 id=\"go语言函数作为参数\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数作为参数\">#</a> go 语言函数作为参数</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello,%s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> f <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">,</span> sayHello<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>Hello,tom\n</code></pre>\n<h2 id=\"go语言函数作为返回值\"><a class=\"markdownIt-Anchor\" href=\"#go语言函数作为返回值\">#</a> go 语言函数作为返回值</h2>\n<pre><code>package main\n\nimport &quot;fmt&quot;\n\nfunc add(x, y int) int &#123;\n\treturn x + y\n&#125;\n\nfunc sub(x, y int) int &#123;\n\treturn x - y\n&#125;\n\nfunc cal(s string) func(int, int) int &#123;\n\tswitch s &#123;\n\tcase &quot;+&quot;:\n\t\treturn add\n\tcase &quot;-&quot;:\n\t\treturn sub\n\tdefault:\n\t\treturn nil\n\t&#125;\n&#125;\n\nfunc main() &#123;\n\tadd := cal(&quot;+&quot;)\n\tr := add(1, 2)\n\tfmt.Printf(&quot;r: %v\\n&quot;, r)\n\n\tfmt.Println(&quot;-----------&quot;)\n\n\tsub := cal(&quot;-&quot;)\n\tr = sub(100, 50)\n\tfmt.Printf(&quot;r: %v\\n&quot;, r)\n&#125;\n</code></pre>\n<p>运行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>r<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span></pre></td></tr></table></figure><h1 id=\"golang匿名函数\"><a class=\"markdownIt-Anchor\" href=\"#golang匿名函数\">#</a> golang 匿名函数</h1>\n<p>go 语言函数不能嵌套，但是在函数内部可以定义匿名函数，实现一下简单功能调用。</p>\n<p>所谓匿名函数就是，没有名称的函数。</p>\n<p>语法格式如下：</p>\n<pre><code>func (参数列表)(返回值)\n</code></pre>\n<blockquote>\n<p>当然可以既没有参数，可以没有返回值</p>\n</blockquote>\n<h2 id=\"匿名函数实例\"><a class=\"markdownIt-Anchor\" href=\"#匿名函数实例\">#</a> 匿名函数实例</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tmax <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> a</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> b</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ti <span class=\"token operator\">:=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>i: 2\n</code></pre>\n<p>自己执行</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 自己执行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>a <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tmax <span class=\"token operator\">:=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\tmax <span class=\"token operator\">=</span> a</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\tmax <span class=\"token operator\">=</span> b</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max: %v\\n\"</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>max: 2\n</code></pre>\n<h1 id=\"golang闭包\"><a class=\"markdownIt-Anchor\" href=\"#golang闭包\">#</a> golang 闭包</h1>\n<p>闭包可以理解成<strong>定义在一个函数内部的函数</strong>。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。或者说是函数和其引用环境的组合体。</p>\n<p>闭包指的是一个函数和与其相关的引用环境组合而成的实体。简单来说， <code>闭包=函数+引用环境</code> 。 首先我们来看一个例子：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 返回一个函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>y <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tx <span class=\"token operator\">+=</span> y</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tf1 <span class=\"token operator\">:=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>10\n30\n60\n-----------\n40\n90\n</code></pre>\n<p>变量 <code>f</code>  是一个函数并且它引用了其外部作用域中的 <code>x</code>  变量，此时 <code>f</code>  就是一个闭包。 在 <code>f</code>  的生命周期内，<strong>变量 <code>x</code>  也一直有效。</strong> 闭包进阶示例 1：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>y <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tx <span class=\"token operator\">+=</span> y</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tf1 <span class=\"token operator\">:=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>20\n40\n70\n----------\n60\n110\n</code></pre>\n<p>闭包进阶示例 2：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">makeSuffixFunc</span><span class=\"token punctuation\">(</span>suffix <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>strings<span class=\"token punctuation\">.</span><span class=\"token function\">HasSuffix</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> suffix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> name <span class=\"token operator\">+</span> suffix</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tjpgFunc <span class=\"token operator\">:=</span> <span class=\"token function\">makeSuffixFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".jpg\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\ttxtFunc <span class=\"token operator\">:=</span> <span class=\"token function\">makeSuffixFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".txt\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">jpgFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">txtFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>test.jpg\ntest.txt\n</code></pre>\n<p>闭包进阶示例 3：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>base <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tadd <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>i <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tbase <span class=\"token operator\">+=</span> i</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> base</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tsub <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>i <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tbase <span class=\"token operator\">-=</span> i</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> base</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">return</span> add<span class=\"token punctuation\">,</span> sub</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tf1<span class=\"token punctuation\">,</span> f2 <span class=\"token operator\">:=</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>11 9\n12 8\n13 7\n</code></pre>\n<p>闭包其实并不复杂，只要牢记 <code>闭包=函数+引用环境</code> 。</p>\n<h1 id=\"golang递归\"><a class=\"markdownIt-Anchor\" href=\"#golang递归\">#</a> golang 递归</h1>\n<p>函数内部调用函数自身的函数称为递归函数。</p>\n<p>使用递归函数最重要的三点：</p>\n<ol>\n<li>递归就是自己调用自己。</li>\n<li>必须先定义函数的退出条件，没有退出条件，递归将成为死循环。</li>\n<li>go 语言递归函数很可能会产生一大堆的 goroutine，也很可能会出现栈空间内存溢出问题。</li>\n</ol>\n<h2 id=\"go语言递归实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言递归实例\">#</a> go 语言递归实例</h2>\n<p><strong>阶乘</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 返回条件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 自己调用自己</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tn <span class=\"token operator\">:=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r: %v\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>r: 120\n</code></pre>\n<p><strong>斐波那契数列</strong></p>\n<p>它的计算公式为 <code>f(n)=f(n-1)+f(n-2)</code>  且 <code>f(2)=f(1)=1</code></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 退出点判断</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 递归表达式</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r: %v\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>r: 5\n</code></pre>\n<h1 id=\"golang-defer语句\"><a class=\"markdownIt-Anchor\" href=\"#golang-defer语句\">#</a> golang defer 语句</h1>\n<p>go 语言中的 <code>defer</code>  语句会将其后面跟随的语句进行<strong>延迟</strong>处理。在 <code>defer</code>  归属的函数即将返回时，将延迟处理的语句按 <code>defer</code>  定义的<strong>逆序</strong>进行执行，也就是说，先被 <code>defer</code>  的语句最后被执行，最后被 <code>defer</code>  的语句，最先被执行。stack</p>\n<h2 id=\"defer特性\"><a class=\"markdownIt-Anchor\" href=\"#defer特性\">#</a> defer 特性</h2>\n<ol>\n<li>关键字  <code>defer</code>  用于注册延迟调用。</li>\n<li>这些调用直到  <code>return</code>  前才被执。因此，可以用来做资源清理。</li>\n<li>多个 <code>defer</code>  语句，按先进后出的方式执行。</li>\n<li><code>defer</code>  语句中的变量，在 <code>defer</code>  声明时就决定了。</li>\n</ol>\n<h2 id=\"defer用途\"><a class=\"markdownIt-Anchor\" href=\"#defer用途\">#</a> defer 用途</h2>\n<ol>\n<li>关闭文件句柄</li>\n<li>锁资源释放</li>\n<li>数据库连接释放</li>\n</ol>\n<h2 id=\"go语言defer语句实例\"><a class=\"markdownIt-Anchor\" href=\"#go语言defer语句实例\">#</a> go 语言 defer 语句实例</h2>\n<p><strong>查看执行顺序</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">defer</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"step1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">defer</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"step2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">defer</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"step3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>start\nend\nstep3\nstep2\nstep1\n</code></pre>\n<h1 id=\"golang-init函数\"><a class=\"markdownIt-Anchor\" href=\"#golang-init函数\">#</a> golang init 函数</h1>\n<p>golang 有一个特殊的函数 <code>init</code>  函数，先于 <code>main</code>  函数执行，实现包级别的一些<strong>初始化</strong>操作。</p>\n<h2 id=\"init函数的主要特点\"><a class=\"markdownIt-Anchor\" href=\"#init函数的主要特点\">#</a> init 函数的主要特点</h2>\n<ul>\n<li>init 函数先于 main 函数<strong>自动执行</strong>，不能被其他函数调用；</li>\n<li>init 函数没有输入参数、返回值；</li>\n<li>每个包可以有多个 init 函数；</li>\n<li><strong>包的每个源文件也可以有多个 init 函数</strong>，这点比较特殊；</li>\n<li>同一个包的 init 执行顺序，golang 没有明确定义，编程时要注意程序不要依赖这个执行顺序。</li>\n<li>不同包的 init 函数按照包导入的依赖关系决定执行顺序。</li>\n</ul>\n<h2 id=\"golang-初始化顺序\"><a class=\"markdownIt-Anchor\" href=\"#golang-初始化顺序\">#</a> golang 初始化顺序</h2>\n<p>初始化顺序：<strong>变量初始化 -&gt;init ()-&gt;main ()</strong></p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token function\">initVar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">initVar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init var...\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main...\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>运行结果</strong></p>\n<pre><code>init var...\ninit2\ninit\nmain...\n</code></pre>\n<h1 id=\"golang指针\"><a class=\"markdownIt-Anchor\" href=\"#golang指针\">#</a> golang 指针</h1>\n<p>Go 语言中的函数传参都是值拷贝，当我们想要修改某个变量的时候，我们可以创建一个指向该变量地址的指针变量。传递数据使用指针，而无须拷贝数据。</p>\n<p>类型指针不能进行偏移和运算。</p>\n<p>Go 语言中的指针操作非常简单，只需要记住两个符号： <code>&amp;</code> （取地址）和 <code>*</code> （根据地址取值）。</p>\n<h3 id=\"指针地址和指针类型\"><a class=\"markdownIt-Anchor\" href=\"#指针地址和指针类型\">#</a> 指针地址和指针类型</h3>\n<p>每个变量在运行时都拥有一个地址，这个地址代表变量在内存中的位置。Go 语言中使用 <code>&amp;</code>  字符放在变量前面对变量进行<strong>取地址</strong>操作。 Go 语言中的值类型 <code>（int、float、bool、string、array、struct）</code> 都有对应的指针类型，如： <code>*int、*int64、*string</code>  等。</p>\n<h2 id=\"指针语法\"><a class=\"markdownIt-Anchor\" href=\"#指针语法\">#</a> 指针语法</h2>\n<p>一个指针变量指向了一个值的内存地址。（也就是我们声明了一个指针之后，可以像变量赋值一样，把一个值的内存地址放入到指针当中。）</p>\n<p>类似于变量和常量，在使用指针前你需要声明指针。指针声明格式如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> var_name <span class=\"token operator\">*</span><span class=\"token keyword\">var</span><span class=\"token operator\">-</span><span class=\"token keyword\">type</span></pre></td></tr></table></figure><p><code>var-type</code>  ：为指针类型</p>\n<p><code>var_name</code>  ：为指针变量名</p>\n<p><code>*</code>  ：用于指定变量是作为一个指针。</p>\n<h2 id=\"指针声明实例\"><a class=\"markdownIt-Anchor\" href=\"#指针声明实例\">#</a> 指针声明实例</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ip <span class=\"token operator\">*</span><span class=\"token builtin\">int</span>        <span class=\"token comment\">/* 指向整型 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> fp <span class=\"token operator\">*</span><span class=\"token builtin\">float32</span>    <span class=\"token comment\">/* 指向浮点型 */</span></pre></td></tr></table></figure><h2 id=\"指针使用实例\"><a class=\"markdownIt-Anchor\" href=\"#指针使用实例\">#</a> 指针使用实例</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span><span class=\"token operator\">=</span> <span class=\"token number\">20</span>   <span class=\"token comment\">/* 声明实际变量 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> ip <span class=\"token operator\">*</span><span class=\"token builtin\">int</span>        <span class=\"token comment\">/* 声明指针变量 */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tip <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a  <span class=\"token comment\">/* 指针变量的存储地址 */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 变量的地址是: %x\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">/* 指针变量的存储地址 */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ip 变量储存的指针地址: %x\\n\"</span><span class=\"token punctuation\">,</span> ip <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">/* 使用指针访问值 */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*ip 变量的值: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ip <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>a 变量的地址是: c00000a0a8\nip 变量储存的指针地址: c00000a0a8\n*ip 变量的值: 20\n</code></pre>\n<h1 id=\"golang指向数组的指针\"><a class=\"markdownIt-Anchor\" href=\"#golang指向数组的指针\">#</a> golang 指向数组的指针</h1>\n<h2 id=\"定义语法\"><a class=\"markdownIt-Anchor\" href=\"#定义语法\">#</a> 定义语法</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> ptr <span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">;</span> 表示数组里面的元素的类型是指针类型</pre></td></tr></table></figure><h2 id=\"实例演示\"><a class=\"markdownIt-Anchor\" href=\"#实例演示\">#</a> 实例演示</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> MAX <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\ta <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">var</span> ptr <span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 这个打印出来是 [&lt;nil> &lt;nil> &lt;nil>]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">for</span>  i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> MAX<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token comment\">/* 整数地址赋值给指针数组 */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span>  i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> MAX<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>   <span class=\"token comment\">//*ptr [i] 就是打印出相关指针的值了。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>[&lt;nil&gt; &lt;nil&gt; &lt;nil&gt;]\na[0] = 1\na[1] = 3\na[2] = 5\n</code></pre>\n<h1 id=\"golang类型定义和类型别名\"><a class=\"markdownIt-Anchor\" href=\"#golang类型定义和类型别名\">#</a> golang 类型定义和类型别名</h1>\n<p>在介绍<strong>结构体</strong>之前，我们先来看看什么是类型定义和类型别名。</p>\n<h1 id=\"go语言类型定义\"><a class=\"markdownIt-Anchor\" href=\"#go语言类型定义\">#</a> go 语言类型定义</h1>\n<p><strong>类型定义的语法</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> NewType Type</pre></td></tr></table></figure><p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 类型定义</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">type</span> MyInt <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//i 为 MyInt 类型</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">var</span> i MyInt</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ti <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v i: %T\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>i: 100 i: main.MyInt\n</code></pre>\n<h2 id=\"go语言类型别名\"><a class=\"markdownIt-Anchor\" href=\"#go语言类型别名\">#</a> go 语言类型别名</h2>\n<p><strong>类型别名的语法</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> NewType <span class=\"token operator\">=</span> Type</pre></td></tr></table></figure><p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 类型别名定义</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">type</span> MyInt2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">//i 其实还是 int 类型</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">var</span> i MyInt2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ti <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i: %v i: %T\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"go语言类型定义和类型别名的区别\"><a class=\"markdownIt-Anchor\" href=\"#go语言类型定义和类型别名的区别\">#</a> go 语言类型定义和类型别名的区别</h2>\n<ol>\n<li>类型定义相当于定义了一个<strong>全新的类型</strong>，与之前的类型不同；但是类型别名并没有定义一个新的类型，而是使用一个别名来替换之前的类型</li>\n<li>类型别名只会在<strong>代码</strong>中存在，在<strong>编译完成</strong>之后并不会存在该别名</li>\n<li>因为类型别名和原来的类型是一致的，所以原来类型所拥有的<strong>方法</strong>，类型别名中也<strong>可以</strong>调用，但是如果是重新定义的一个类型，那么<strong>不可以</strong>调用之前的任何方法</li>\n</ol>\n<h1 id=\"golang-结构体\"><a class=\"markdownIt-Anchor\" href=\"#golang-结构体\">#</a> golang 结构体</h1>\n<p>go 语言没有面向对象的概念了，但是可以使用结构体来实现，面向对象编程的一些特性，例如：继承、组合等特性。</p>\n<h2 id=\"go语言结构体的定义\"><a class=\"markdownIt-Anchor\" href=\"#go语言结构体的定义\">#</a> go 语言结构体的定义</h2>\n<p>上一节我们介绍了类型定义，结构体的定义和类型定义类似，只不过多了一个 <code>struct</code>  关键字，语法结构如下：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> struct_variable_type <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   member definition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   member definition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   member definition<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>type</code> ：结构体定义关键字</p>\n<p><code>struct_variable_type</code> ：结构体类型名称</p>\n<p><code>struct</code> ：结构体定义关键字</p>\n<p><code>member definition;</code> ：成员定义</p>\n<p><strong>实例</strong></p>\n<p>下面我们定义一个人的结构体 Person</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    id    <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    name  <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    age   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上我们定义一个 Person 结构体，有四个成员，来描述一个 Person 的信息。</p>\n<p>形同类型的可以<strong>合并到一行</strong>，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    id<span class=\"token punctuation\">,</span> age     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    name<span class=\"token punctuation\">,</span> email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"声明一个结构体变量\"><a class=\"markdownIt-Anchor\" href=\"#声明一个结构体变量\">#</a> 声明一个结构体变量</h2>\n<p>声明一个结构体变量和声明一个普通变量相同，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> tom Person</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom: %v\\n\"</span><span class=\"token punctuation\">,</span> tom<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>kite <span class=\"token operator\">:=</span> Person<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kite: %v\\n\"</span><span class=\"token punctuation\">,</span> kite<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>也行结果</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tom<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span> <span class=\"token number\">0</span>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>kite<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span> <span class=\"token number\">0</span>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>结构体成员，在没有赋值之前都是零值。</p>\n<h2 id=\"访问结构体成员\"><a class=\"markdownIt-Anchor\" href=\"#访问结构体成员\">#</a> 访问结构体成员</h2>\n<p>可以使用点运算符 ( <code>.</code> )，来访问结构体成员，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid<span class=\"token punctuation\">,</span> age     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> tom Person</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> <span class=\"token string\">\"tom@gmail.com\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom: %v\\n\"</span><span class=\"token punctuation\">,</span> tom<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果如下</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tom<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span> <span class=\"token number\">20</span> tom tom@gmail<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"匿名结构体\"><a class=\"markdownIt-Anchor\" href=\"#匿名结构体\">#</a> 匿名结构体</h2>\n<p>如果结构体是临时使用，可以不用起名字，直接使用，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> dog <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tdog<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tdog<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"花花\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dog: %v\\n\"</span><span class=\"token punctuation\">,</span> dog<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"golang结构体的初始化\"><a class=\"markdownIt-Anchor\" href=\"#golang结构体的初始化\">#</a> golang 结构体的初始化</h1>\n<p>未初始化的结构体，成员都是零值 int 0 float 0.0 bool false string nil nil</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid<span class=\"token punctuation\">,</span> age     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> tom Person</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom: %v\\n\"</span><span class=\"token punctuation\">,</span> tom<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>tom: &#123;0 0 &quot;&quot; &quot;&quot;&#125;\n</code></pre>\n<h2 id=\"使用键值对对结构体进行初始化\"><a class=\"markdownIt-Anchor\" href=\"#使用键值对对结构体进行初始化\">#</a> 使用键值对对结构体进行初始化</h2>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid<span class=\"token punctuation\">,</span> age     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tkite <span class=\"token operator\">:=</span> Person<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tid<span class=\"token punctuation\">:</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tname<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tage<span class=\"token punctuation\">:</span>   <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\temail<span class=\"token punctuation\">:</span> <span class=\"token string\">\"kite@gmail.com\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kite: %v\\n\"</span><span class=\"token punctuation\">,</span> kite<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>kite: &#123;1 20 kite kite@gmail.com&#125;\n</code></pre>\n<h3 id=\"使用值的列表初始化\"><a class=\"markdownIt-Anchor\" href=\"#使用值的列表初始化\">#</a> 使用值的列表初始化</h3>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid<span class=\"token punctuation\">,</span> age     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tkite <span class=\"token operator\">:=</span> Person<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token string\">\"kite@gmail.com\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kite: %v\\n\"</span><span class=\"token punctuation\">,</span> kite<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>kite: &#123;1 20 kite kite@gmail.com&#125;\n</code></pre>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li>必须初始化结构体的所有字段。</li>\n<li>初始值的填充顺序必须与字段在结构体中的声明顺序一致。</li>\n<li>该方式不能和键值初始化方式混用。</li>\n</ol>\n</blockquote>\n<h2 id=\"部分成员初始化\"><a class=\"markdownIt-Anchor\" href=\"#部分成员初始化\">#</a> 部分成员初始化</h2>\n<p>用不到的成员，可以不进行初始化</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid<span class=\"token punctuation\">,</span> age     <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname<span class=\"token punctuation\">,</span> email <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tkite <span class=\"token operator\">:=</span> Person<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tid<span class=\"token punctuation\">:</span>   <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tname<span class=\"token punctuation\">:</span> <span class=\"token string\">\"kite\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kite: %v\\n\"</span><span class=\"token punctuation\">,</span> kite<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>kite: &#123;1 0 kite &quot;&quot; &#125;\n</code></pre>\n<h1 id=\"golang结构体指针\"><a class=\"markdownIt-Anchor\" href=\"#golang结构体指针\">#</a> golang 结构体指针</h1>\n<p>结构体指针和普通的变量指针相同，我先来回顾一下普通变量的指针，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tname <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">//p_name 指针类型</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">var</span> p_name <span class=\"token operator\">*</span><span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// &amp;name 取 name 地址</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tp_name <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 输出指针地址</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p_name: %v\\n\"</span><span class=\"token punctuation\">,</span> p_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 输出指针指向的内容值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*p_name: %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>name: tom\np_name: 0xc00010e120\n*p_name: tom\n</code></pre>\n<h2 id=\"go结构体指针\"><a class=\"markdownIt-Anchor\" href=\"#go结构体指针\">#</a> go 结构体指针</h2>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> tom <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">var</span> p_person <span class=\"token operator\">*</span>Person</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tp_person <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tom</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom: %v\\n\"</span><span class=\"token punctuation\">,</span> tom<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p_person: %p\\n\"</span><span class=\"token punctuation\">,</span> p_person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*p_person: %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p_person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>tom: &#123;1 tom&#125;\np_person: 0xc000004078\n*p_person: &#123;1 tom&#125;\n</code></pre>\n<h2 id=\"使用new关键字创建结构体指针\"><a class=\"markdownIt-Anchor\" href=\"#使用new关键字创建结构体指针\">#</a> 使用 <code>new</code>  关键字创建结构体指针</h2>\n<p>我们还可以通过使用 <code>new</code>  关键字对结构体进行实例化，得到的是结构体的地址，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> p_person <span class=\"token operator\">=</span> <span class=\"token function\">new</span><span class=\"token punctuation\">(</span>Person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p_person: %T\\n\"</span><span class=\"token punctuation\">,</span> p_person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>p_person: *main.Person\n</code></pre>\n<p>从运行结果，我们发现 p_person 为指针类型</p>\n<h2 id=\"访问结构体指针成员\"><a class=\"markdownIt-Anchor\" href=\"#访问结构体指针成员\">#</a> 访问结构体指针成员</h2>\n<p>访问结构体指针成员，也使用点运算符 ( <code>.</code> )，例如：</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tid   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> p_person <span class=\"token operator\">=</span> <span class=\"token function\">new</span><span class=\"token punctuation\">(</span>Person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p_person: %T\\n\"</span><span class=\"token punctuation\">,</span> p_person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tp_person<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tp_person<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*p_person: %v\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p_person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>p_person: *main.Person\n*p_person: &#123;1 tom&#125;\n</code></pre>\n<h1 id=\"golang结构体作为函数参数\"><a class=\"markdownIt-Anchor\" href=\"#golang结构体作为函数参数\">#</a> golang 结构体作为函数参数</h1>\n<p>go 结构体可以像普通变量一样，作为函数的参数，传递给函数，这里分为两种情况：</p>\n<ol>\n<li>直接传递结构体，这是是一个副本（拷贝），在函数内部不会改变外面结构体内容。</li>\n<li>传递结构体指针，这时在函数内部，能够改变外部结构体内容。</li>\n</ol>\n<h2 id=\"直接传递结构体\"><a class=\"markdownIt-Anchor\" href=\"#直接传递结构体\">#</a> 直接传递结构体</h2>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tid   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">showPerson</span><span class=\"token punctuation\">(</span>person Person<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tperson<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tperson<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"kite\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person: %v\\n\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tperson <span class=\"token operator\">:=</span> Person<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person: %v\\n\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">showPerson</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person: %v\\n\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>person: &#123;1 tom&#125;\n----------------\nperson: &#123;1 kite&#125;\n----------------\nperson: &#123;1 tom&#125;\n</code></pre>\n<p>从运行结果可以看出，函数内部改变了结构体内容，函数外面并没有被改变。</p>\n<h2 id=\"传递结构体指针\"><a class=\"markdownIt-Anchor\" href=\"#传递结构体指针\">#</a> 传递结构体指针</h2>\n<p><strong>实例</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tid   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">showPerson</span><span class=\"token punctuation\">(</span>person <span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tperson<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tperson<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"kite\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person: %v\\n\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tperson <span class=\"token operator\">:=</span> Person<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tom\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person: %v\\n\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token function\">showPerson</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person: %v\\n\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>person: &#123;1 tom&#125;\n----------------\nperson: &amp;&#123;1 kite&#125;\n----------------\nperson: &#123;1 kite&#125;\n</code></pre>\n<p>从运行结果，我们可以看到，调用函数后，参数被改变了。</p>\n<h1 id=\"golang嵌套结构体\"><a class=\"markdownIt-Anchor\" href=\"#golang嵌套结构体\">#</a> golang 嵌套结构体</h1>\n<p>go 语言没有面向对象编程思想，也没有继承关系，但是可以通过结构体嵌套来实现这种效果。</p>\n<p>下面通过实例演示如何实现结构体嵌套，加入有一个人 <code>Person</code>  结构体，这个人还养了一个宠物 <code>Dog</code>  结构体。</p>\n<p>下面我们来看一下：</p>\n<p><strong>Dog 结构体</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Dog <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tname  <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tcolor <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tage   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>Person 结构体</strong></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tdog  Dog</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tage  <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问它们</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">type</span> Dog <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tname  <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tcolor <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tage   <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">type</span> person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tdog  Dog</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tname <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tage  <span class=\"token builtin\">int</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">var</span> tom person</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>dog<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"花花\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>dog<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"黑白花\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>dog<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"tom\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\ttom<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tom: %v\\n\"</span><span class=\"token punctuation\">,</span> tom<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果</p>\n<pre><code>tom: </code></pre>\n",
            "tags": [
                "GO"
            ]
        }
    ]
}